var searchIndex = {};
searchIndex["preferences"] = {"doc":"*Read and write user-specific application data*","items":[[4,"PreferencesError","preferences","Error type representing the errors that can occur when saving or loading user data.",null,null],[13,"SerializationError","","An error occurred during JSON (de)serialization.",0,null],[13,"IoError","","An error occurred during file I/O.",0,null],[6,"PreferencesMap","","Generic key-value store for user data.",null,null],[8,"PreferencesTrait","","Trait for types that can be saved &amp; loaded as user data.",null,null],[10,"save","","Saves the current state of this object. Implementation is platform-dependent, but the data\nwill be local to the active user. For more details, see \n[the module documentation](index.html).",1,{"inputs":[{"name":"preferencestrait"},{"name":"s"}],"output":{"name":"result"}}],[10,"load","","Loads this object&#39;s state from previously saved user data with the same `path`. This is\nan instance method which completely overwrites the object&#39;s state with the serialized\ndata. Thus, it is recommended that you call this method immediately after instantiating\nthe preferences object.",1,{"inputs":[{"name":"preferencestrait"},{"name":"s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"preferenceserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}]],"paths":[[4,"PreferencesError"],[8,"PreferencesTrait"]]};
searchIndex["serde_macros"] = {"doc":"","items":[],"paths":[]};
searchIndex["serde_codegen"] = {"doc":"","items":[[5,"register","serde_codegen","",null,{"inputs":[{"name":"registry"}],"output":null}]],"paths":[]};
searchIndex["serde_json"] = {"doc":"JSON and serialization","items":[[0,"builder","serde_json","JSON Builders",null,null],[3,"ArrayBuilder","serde_json::builder","This structure provides a simple interface for constructing a JSON array.",null,null],[3,"ObjectBuilder","","This structure provides a simple interface for constructing a JSON object.",null,null],[11,"new","","Construct an `ObjectBuilder`.",0,{"inputs":[],"output":{"name":"arraybuilder"}}],[11,"unwrap","","Return the constructed `Value`.",0,{"inputs":[{"name":"arraybuilder"}],"output":{"name":"value"}}],[11,"push","","Insert a value into the array.",0,{"inputs":[{"name":"arraybuilder"},{"name":"t"}],"output":{"name":"arraybuilder"}}],[11,"push_array","","Creates and passes an `ArrayBuilder` into a closure, then inserts the resulting array into\nthis array.",0,{"inputs":[{"name":"arraybuilder"},{"name":"f"}],"output":{"name":"arraybuilder"}}],[11,"push_object","","Creates and passes an `ArrayBuilder` into a closure, then inserts the resulting object into\nthis array.",0,{"inputs":[{"name":"arraybuilder"},{"name":"f"}],"output":{"name":"arraybuilder"}}],[11,"new","","Construct an `ObjectBuilder`.",1,{"inputs":[],"output":{"name":"objectbuilder"}}],[11,"unwrap","","Return the constructed `Value`.",1,{"inputs":[{"name":"objectbuilder"}],"output":{"name":"value"}}],[11,"insert","","Insert a key-value pair into the object.",1,{"inputs":[{"name":"objectbuilder"},{"name":"s"},{"name":"v"}],"output":{"name":"objectbuilder"}}],[11,"insert_array","","Creates and passes an `ObjectBuilder` into a closure, then inserts the resulting array into\nthis object.",1,{"inputs":[{"name":"objectbuilder"},{"name":"s"},{"name":"f"}],"output":{"name":"objectbuilder"}}],[11,"insert_object","","Creates and passes an `ObjectBuilder` into a closure, then inserts the resulting object into\nthis object.",1,{"inputs":[{"name":"objectbuilder"},{"name":"s"},{"name":"f"}],"output":{"name":"objectbuilder"}}],[0,"de","serde_json","JSON Deserialization",null,null],[3,"Deserializer","serde_json::de","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON values.",null,null],[5,"from_iter","","Decodes a json value from an iterator over an iterator\n`Iterator&lt;Item=io::Result&lt;u8&gt;&gt;`.",null,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[5,"from_reader","","Decodes a json value from a `std::io::Read`.",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[5,"from_slice","","Decodes a json value from a byte slice `&amp;[u8]`.",null,null],[5,"from_str","","Decodes a json value from a `&amp;str`.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Creates the JSON parser from an `std::iter::Iterator`.",2,{"inputs":[{"name":"iter"}],"output":{"name":"deserializer"}}],[11,"end","","The `Deserializer::end` method should be called after a value has been fully deserialized.\nThis allows the `Deserializer` to validate that the input stream is at the end or that it\nonly has trailing whitespace.",2,{"inputs":[{"name":"deserializer"}],"output":{"name":"result"}}],[11,"deserialize","","",2,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","Parses a `null` as a None, and any other values as a `Some(...)`.",2,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","Parses a newtype struct as the underlying value.",2,{"inputs":[{"name":"deserializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","Parses an enum as an object like `{&quot;$KEY&quot;:$VALUE}`, where $VALUE is either a straight\nvalue, a `[..]`, or a `{..}`.",2,null],[11,"visit_variant","","",2,{"inputs":[{"name":"deserializer"}],"output":{"name":"result"}}],[11,"visit_unit","","",2,{"inputs":[{"name":"deserializer"}],"output":{"name":"result"}}],[11,"visit_newtype","","",2,{"inputs":[{"name":"deserializer"}],"output":{"name":"result"}}],[11,"visit_tuple","","",2,{"inputs":[{"name":"deserializer"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_struct","","",2,null],[11,"new","","Returns an `Iterator` of decoded JSON values from an iterator over\n`Iterator&lt;Item=io::Result&lt;u8&gt;&gt;`.",3,{"inputs":[{"name":"iter"}],"output":{"name":"streamdeserializer"}}],[11,"next","","",3,{"inputs":[{"name":"streamdeserializer"}],"output":{"name":"option"}}],[0,"error","serde_json","JSON Errors",null,null],[4,"ErrorCode","serde_json::error","The errors that can arise while parsing a JSON stream.",null,null],[13,"Custom","","Catchall for syntax error messages",4,null],[13,"InvalidType","","Incorrect type from value",4,null],[13,"InvalidValue","","Incorrect value",4,null],[13,"InvalidLength","","Invalid length",4,null],[13,"UnknownVariant","","Unknown variant in an enum.",4,null],[13,"UnknownField","","Unknown field in struct.",4,null],[13,"MissingField","","Struct is missing a field.",4,null],[13,"EOFWhileParsingList","","EOF while parsing a list.",4,null],[13,"EOFWhileParsingObject","","EOF while parsing an object.",4,null],[13,"EOFWhileParsingString","","EOF while parsing a string.",4,null],[13,"EOFWhileParsingValue","","EOF while parsing a JSON value.",4,null],[13,"ExpectedColon","","Expected this character to be a `&#39;:&#39;`.",4,null],[13,"ExpectedListCommaOrEnd","","Expected this character to be either a `&#39;,&#39;` or a `]`.",4,null],[13,"ExpectedObjectCommaOrEnd","","Expected this character to be either a `&#39;,&#39;` or a `}`.",4,null],[13,"ExpectedSomeIdent","","Expected to parse either a `true`, `false`, or a `null`.",4,null],[13,"ExpectedSomeValue","","Expected this character to start a JSON value.",4,null],[13,"InvalidEscape","","Invalid hex escape code.",4,null],[13,"InvalidNumber","","Invalid number.",4,null],[13,"InvalidUnicodeCodePoint","","Invalid unicode code point.",4,null],[13,"KeyMustBeAString","","Object key is not a string.",4,null],[13,"LoneLeadingSurrogateInHexEscape","","Lone leading surrogate in hex escape.",4,null],[13,"TrailingCharacters","","JSON has non-whitespace trailing characters after the value.",4,null],[13,"UnexpectedEndOfHexEscape","","Unexpected end of hex excape.",4,null],[4,"Error","","This type represents all possible errors that can occur when serializing or deserializing a\nvalue into JSON.",null,null],[13,"Syntax","","The JSON value had some syntatic error.",5,null],[13,"Io","","Some IO error occurred when serializing or deserializing a value.",5,null],[13,"FromUtf8","","Some UTF8 error occurred while serializing or deserializing a value.",5,null],[6,"Result","","Helper alias for `Result` objects that return a JSON `Error`.",null,null],[11,"eq","","",4,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"fmt","","",4,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",5,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",5,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"fmt","","",5,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",5,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"custom","","",5,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[11,"end_of_stream","","",5,{"inputs":[],"output":{"name":"error"}}],[11,"invalid_type","","",5,{"inputs":[{"name":"type"}],"output":{"name":"error"}}],[11,"invalid_value","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"invalid_length","","",5,{"inputs":[{"name":"usize"}],"output":{"name":"error"}}],[11,"unknown_variant","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"unknown_field","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"missing_field","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"custom","","Raised when there is general error when deserializing a type.",5,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[0,"ser","serde_json","JSON Serialization",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra whitespace.",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human readable.",null,null],[5,"escape_bytes","","Serializes and escapes a `&amp;[u8]` into a JSON string.",null,null],[5,"escape_str","","Serializes and escapes a `&amp;str` into a JSON string.",null,{"inputs":[{"name":"w"},{"name":"str"}],"output":{"name":"result"}}],[5,"to_writer","","Encode the specified struct into a json `[u8]` writer.",null,{"inputs":[{"name":"w"},{"name":"t"}],"output":{"name":"result"}}],[5,"to_writer_pretty","","Encode the specified struct into a json `[u8]` writer.",null,{"inputs":[{"name":"w"},{"name":"t"}],"output":{"name":"result"}}],[5,"to_vec","","Encode the specified struct into a json `[u8]` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_vec_pretty","","Encode the specified struct into a json `[u8]` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_string","","Encode the specified struct into a json `String` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_string_pretty","","Encode the specified struct into a json `String` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[8,"Formatter","","This trait abstracts away serializing the JSON control characters, which allows the user to\noptionally pretty print the JSON output.",null,null],[10,"open","","Called when serializing a &#39;{&#39; or &#39;[&#39;.",6,{"inputs":[{"name":"formatter"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[10,"comma","","Called when serializing a &#39;,&#39;.",6,{"inputs":[{"name":"formatter"},{"name":"w"},{"name":"bool"}],"output":{"name":"result"}}],[10,"colon","","Called when serializing a &#39;:&#39;.",6,{"inputs":[{"name":"formatter"},{"name":"w"}],"output":{"name":"result"}}],[10,"close","","Called when serializing a &#39;}&#39; or &#39;]&#39;.",6,{"inputs":[{"name":"formatter"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[11,"new","","Creates a new JSON serializer.",7,{"inputs":[{"name":"w"}],"output":{"name":"self"}}],[11,"pretty","","Creates a new JSON pretty print serializer.",7,{"inputs":[{"name":"w"}],"output":{"name":"self"}}],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to the writer\nspecified.",7,{"inputs":[{"name":"w"},{"name":"f"}],"output":{"name":"self"}}],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",7,{"inputs":[{"name":"serializer"}],"output":{"name":"w"}}],[11,"serialize_bool","","",7,{"inputs":[{"name":"serializer"},{"name":"bool"}],"output":{"name":"result"}}],[11,"serialize_isize","","",7,{"inputs":[{"name":"serializer"},{"name":"isize"}],"output":{"name":"result"}}],[11,"serialize_i8","","",7,{"inputs":[{"name":"serializer"},{"name":"i8"}],"output":{"name":"result"}}],[11,"serialize_i16","","",7,{"inputs":[{"name":"serializer"},{"name":"i16"}],"output":{"name":"result"}}],[11,"serialize_i32","","",7,{"inputs":[{"name":"serializer"},{"name":"i32"}],"output":{"name":"result"}}],[11,"serialize_i64","","",7,{"inputs":[{"name":"serializer"},{"name":"i64"}],"output":{"name":"result"}}],[11,"serialize_usize","","",7,{"inputs":[{"name":"serializer"},{"name":"usize"}],"output":{"name":"result"}}],[11,"serialize_u8","","",7,{"inputs":[{"name":"serializer"},{"name":"u8"}],"output":{"name":"result"}}],[11,"serialize_u16","","",7,{"inputs":[{"name":"serializer"},{"name":"u16"}],"output":{"name":"result"}}],[11,"serialize_u32","","",7,{"inputs":[{"name":"serializer"},{"name":"u32"}],"output":{"name":"result"}}],[11,"serialize_u64","","",7,{"inputs":[{"name":"serializer"},{"name":"u64"}],"output":{"name":"result"}}],[11,"serialize_f32","","",7,{"inputs":[{"name":"serializer"},{"name":"f32"}],"output":{"name":"result"}}],[11,"serialize_f64","","",7,{"inputs":[{"name":"serializer"},{"name":"f64"}],"output":{"name":"result"}}],[11,"serialize_char","","",7,{"inputs":[{"name":"serializer"},{"name":"char"}],"output":{"name":"result"}}],[11,"serialize_str","","",7,{"inputs":[{"name":"serializer"},{"name":"str"}],"output":{"name":"result"}}],[11,"serialize_none","","",7,{"inputs":[{"name":"serializer"}],"output":{"name":"result"}}],[11,"serialize_some","","",7,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_unit","","",7,{"inputs":[{"name":"serializer"}],"output":{"name":"result"}}],[11,"serialize_newtype_struct","","Override `visit_newtype_struct` to serialize newtypes without an object wrapper.",7,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_unit_variant","","",7,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"serialize_newtype_variant","","",7,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"usize"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_seq","","",7,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_tuple_variant","","",7,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"usize"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_seq_elt","","",7,{"inputs":[{"name":"serializer"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_map","","",7,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_struct_variant","","",7,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"usize"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_map_elt","","",7,{"inputs":[{"name":"serializer"},{"name":"k"},{"name":"v"}],"output":{"name":"result"}}],[11,"open","","",8,{"inputs":[{"name":"compactformatter"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[11,"comma","","",8,{"inputs":[{"name":"compactformatter"},{"name":"w"},{"name":"bool"}],"output":{"name":"result"}}],[11,"colon","","",8,{"inputs":[{"name":"compactformatter"},{"name":"w"}],"output":{"name":"result"}}],[11,"close","","",8,{"inputs":[{"name":"compactformatter"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[11,"new","","Construct a pretty printer formatter that defaults to using two spaces for indentation.",9,{"inputs":[],"output":{"name":"self"}}],[11,"with_indent","","Construct a pretty printer formatter that uses the `indent` string for indentation.",9,null],[11,"open","","",9,{"inputs":[{"name":"prettyformatter"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[11,"comma","","",9,{"inputs":[{"name":"prettyformatter"},{"name":"w"},{"name":"bool"}],"output":{"name":"result"}}],[11,"colon","","",9,{"inputs":[{"name":"prettyformatter"},{"name":"w"}],"output":{"name":"result"}}],[11,"close","","",9,{"inputs":[{"name":"prettyformatter"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[0,"value","serde_json","JSON Value",null,null],[3,"Serializer","serde_json::value","Create a `serde::Serializer` that serializes a `Serialize`e into a `Value`.",null,null],[3,"Deserializer","","Creates a `serde::Deserializer` from a `json::Value` object.",null,null],[4,"Value","","Represents a JSON value",null,null],[13,"Null","","Represents a JSON null value",10,null],[13,"Bool","","Represents a JSON Boolean",10,null],[13,"I64","","Represents a JSON signed integer",10,null],[13,"U64","","Represents a JSON unsigned integer",10,null],[13,"F64","","Represents a JSON floating point number",10,null],[13,"String","","Represents a JSON string",10,null],[13,"Array","","Represents a JSON array",10,null],[13,"Object","","Represents a JSON object",10,null],[5,"to_value","","Shortcut function to encode a `T` into a JSON `Value`",null,{"inputs":[{"name":"t"}],"output":{"name":"value"}}],[5,"from_value","","Shortcut function to decode a JSON `Value` into a `T`",null,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"find","","If the `Value` is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",10,{"inputs":[{"name":"value"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Value Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the `Value` associated with the final key.",10,null],[11,"lookup","","Looks up a value by path.",10,{"inputs":[{"name":"value"},{"name":"str"}],"output":{"name":"option"}}],[11,"search","","If the `Value` is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the `Value` is not an Object, returns None.",10,{"inputs":[{"name":"value"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the `Value` is an Object. Returns false otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"as_object","","If the `Value` is an Object, returns the associated BTreeMap.\nReturns None otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the `Value` is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the `Value` is an Array. Returns false otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"as_array","","If the `Value` is an Array, returns the associated vector.\nReturns None otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable vector.\nReturns None otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the `Value` is a String. Returns false otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"as_string","","If the `Value` is a String, returns the associated str.\nReturns None otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the `Value` is a Number. Returns false otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the `Value` is a i64. Returns false otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the `Value` is a u64. Returns false otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the `Value` is a f64. Returns false otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"as_i64","","If the `Value` is a number, return or cast it to a i64.\nReturns None otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"as_u64","","If the `Value` is a number, return or cast it to a u64.\nReturns None otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"as_f64","","If the `Value` is a number, return or cast it to a f64.\nReturns None otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the `Value` is a Boolean, returns the associated bool.\nReturns None otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the `Value` is a Null. Returns false otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"as_null","","If the `Value` is a Null, returns ().\nReturns None otherwise.",10,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"serialize","","",10,{"inputs":[{"name":"value"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",10,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","Serializes a json value into a string",10,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Serializer`.",11,{"inputs":[],"output":{"name":"serializer"}}],[11,"unwrap","","Unwrap the `Serializer` and return the `Value`.",11,{"inputs":[{"name":"serializer"}],"output":{"name":"value"}}],[11,"serialize_bool","","",11,{"inputs":[{"name":"serializer"},{"name":"bool"}],"output":{"name":"result"}}],[11,"serialize_i64","","",11,{"inputs":[{"name":"serializer"},{"name":"i64"}],"output":{"name":"result"}}],[11,"serialize_u64","","",11,{"inputs":[{"name":"serializer"},{"name":"u64"}],"output":{"name":"result"}}],[11,"serialize_f64","","",11,{"inputs":[{"name":"serializer"},{"name":"f64"}],"output":{"name":"result"}}],[11,"serialize_char","","",11,{"inputs":[{"name":"serializer"},{"name":"char"}],"output":{"name":"result"}}],[11,"serialize_str","","",11,{"inputs":[{"name":"serializer"},{"name":"str"}],"output":{"name":"result"}}],[11,"serialize_none","","",11,{"inputs":[{"name":"serializer"}],"output":{"name":"result"}}],[11,"serialize_some","","",11,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_unit","","",11,{"inputs":[{"name":"serializer"}],"output":{"name":"result"}}],[11,"serialize_unit_variant","","",11,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"serialize_newtype_variant","","",11,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"usize"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_seq","","",11,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_tuple_variant","","",11,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"usize"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_seq_elt","","",11,{"inputs":[{"name":"serializer"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_map","","",11,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_struct_variant","","",11,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"usize"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_map_elt","","",11,{"inputs":[{"name":"serializer"},{"name":"k"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Creates a new deserializer instance for deserializing the specified JSON value.",12,{"inputs":[{"name":"value"}],"output":{"name":"deserializer"}}],[11,"deserialize","","",12,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",12,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",12,null],[11,"deserialize_newtype_struct","","",12,{"inputs":[{"name":"deserializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}]],"paths":[[3,"ArrayBuilder"],[3,"ObjectBuilder"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"ErrorCode"],[4,"Error"],[8,"Formatter"],[3,"Serializer"],[3,"CompactFormatter"],[3,"PrettyFormatter"],[4,"Value"],[3,"Serializer"],[3,"Deserializer"]]};
searchIndex["quasi_macros"] = {"doc":"","items":[],"paths":[]};
searchIndex["serde"] = {"doc":"Serde Serialization Framework","items":[[0,"bytes","serde","Helper module to enable serializing bytes more efficiently",null,null],[3,"Bytes","serde::bytes","`Bytes` wraps a `&amp;[u8]` in order to serialize into a byte array.",null,null],[3,"ByteBuf","","`ByteBuf` wraps a `Vec&lt;u8&gt;` and serializes as a byte array.",null,null],[3,"ByteBufVisitor","","This type implements the `serde::de::Visitor` trait for a `ByteBuf`.",null,null],[11,"cmp","","",0,{"inputs":[{"name":"bytes"},{"name":"bytes"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"bytes"},{"name":"bytes"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"bytes"},{"name":"bytes"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"bytes"},{"name":"bytes"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"bytes"},{"name":"bytes"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"bytes"},{"name":"bytes"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"bytes"},{"name":"bytes"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"bytes"},{"name":"bytes"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"clone","","",0,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"fmt","","",0,{"inputs":[{"name":"bytes"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,null],[11,"from","","",0,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"into","","",0,null],[11,"deref","","",0,null],[11,"serialize","","",0,{"inputs":[{"name":"bytes"},{"name":"s"}],"output":{"name":"result"}}],[11,"cmp","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"clone","","",1,{"inputs":[{"name":"bytebuf"}],"output":{"name":"bytebuf"}}],[11,"new","","Construct a new, empty `ByteBuf`.",1,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Construct a new, empty `ByteBuf` with the specified capacity.",1,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"fmt","","",1,{"inputs":[{"name":"bytebuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into","","",1,{"inputs":[{"name":"bytebuf"}],"output":{"name":"vec"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"as_ref","","",1,{"inputs":[{"name":"bytebuf"}],"output":{"name":"vec"}}],[11,"as_ref","","",1,null],[11,"as_mut","","",1,{"inputs":[{"name":"bytebuf"}],"output":{"name":"vec"}}],[11,"as_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"serialize","","",1,{"inputs":[{"name":"bytebuf"},{"name":"s"}],"output":{"name":"result"}}],[11,"visit_unit","","",2,{"inputs":[{"name":"bytebufvisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","",2,{"inputs":[{"name":"bytebufvisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_bytes","","",2,null],[11,"visit_byte_buf","","",2,{"inputs":[{"name":"bytebufvisitor"},{"name":"vec"}],"output":{"name":"result"}}],[11,"deserialize","","",1,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"de","serde","Generic deserialization framework.",null,null],[4,"Type","serde::de","`Type` represents all the primitive types that can be deserialized. This is used by\n`Error::invalid_type`.",null,null],[13,"Bool","","Represents a `bool` type.",3,null],[13,"Usize","","Represents a `usize` type.",3,null],[13,"U8","","Represents a `u8` type.",3,null],[13,"U16","","Represents a `u16` type.",3,null],[13,"U32","","Represents a `u32` type.",3,null],[13,"U64","","Represents a `u64` type.",3,null],[13,"Isize","","Represents a `isize` type.",3,null],[13,"I8","","Represents a `i8` type.",3,null],[13,"I16","","Represents a `i16` type.",3,null],[13,"I32","","Represents a `i32` type.",3,null],[13,"I64","","Represents a `i64` type.",3,null],[13,"F32","","Represents a `f32` type.",3,null],[13,"F64","","Represents a `f64` type.",3,null],[13,"Char","","Represents a `char` type.",3,null],[13,"Str","","Represents a `&amp;str` type.",3,null],[13,"String","","Represents a `String` type.",3,null],[13,"Unit","","Represents a `()` type.",3,null],[13,"Option","","Represents an `Option&lt;T&gt;` type.",3,null],[13,"Seq","","Represents a sequence type.",3,null],[13,"Map","","Represents a map type.",3,null],[13,"UnitStruct","","Represents a unit struct type.",3,null],[13,"NewtypeStruct","","Represents a newtype type.",3,null],[13,"TupleStruct","","Represents a tuple struct type.",3,null],[13,"Struct","","Represents a struct type.",3,null],[13,"FieldName","","Represents a struct field name.",3,null],[13,"Tuple","","Represents a tuple type.",3,null],[13,"Enum","","Represents an `enum` type.",3,null],[13,"VariantName","","Represents an enum variant name.",3,null],[13,"StructVariant","","Represents a struct variant.",3,null],[13,"TupleVariant","","Represents a tuple variant.",3,null],[13,"UnitVariant","","Represents a unit variant.",3,null],[13,"Bytes","","Represents a `&amp;[u8]` type.",3,null],[0,"impls","","This module contains `Deserialize` and `Visitor` implementations.",null,null],[3,"UnitVisitor","serde::de::impls","A visitor that produces a `()`.",null,null],[3,"BoolVisitor","","A visitor that produces a `bool`.",null,null],[3,"PhantomDataVisitor","","A visitor that produces a `PhantomData`.",null,null],[3,"BinaryHeapVisitor","","A visitor that produces a sequence.",null,null],[3,"BTreeSetVisitor","","A visitor that produces a sequence.",null,null],[3,"LinkedListVisitor","","A visitor that produces a sequence.",null,null],[3,"HashSetVisitor","","A visitor that produces a sequence.",null,null],[3,"VecVisitor","","A visitor that produces a sequence.",null,null],[3,"VecDequeVisitor","","A visitor that produces a sequence.",null,null],[3,"TupleVisitor1","","Construct a tuple visitor.",null,null],[3,"TupleVisitor2","","Construct a tuple visitor.",null,null],[3,"TupleVisitor3","","Construct a tuple visitor.",null,null],[3,"TupleVisitor4","","Construct a tuple visitor.",null,null],[3,"TupleVisitor5","","Construct a tuple visitor.",null,null],[3,"TupleVisitor6","","Construct a tuple visitor.",null,null],[3,"TupleVisitor7","","Construct a tuple visitor.",null,null],[3,"TupleVisitor8","","Construct a tuple visitor.",null,null],[3,"TupleVisitor9","","Construct a tuple visitor.",null,null],[3,"TupleVisitor10","","Construct a tuple visitor.",null,null],[3,"TupleVisitor11","","Construct a tuple visitor.",null,null],[3,"TupleVisitor12","","Construct a tuple visitor.",null,null],[3,"BTreeMapVisitor","","A visitor that produces a map.",null,null],[3,"HashMapVisitor","","A visitor that produces a map.",null,null],[3,"IgnoredAny","","A target for deserializers that want to ignore data. Implements\nDeserialize and silently eats data given to it.",null,null],[11,"visit_unit","","",4,{"inputs":[{"name":"unitvisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","",4,{"inputs":[{"name":"unitvisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_bool","","",5,{"inputs":[{"name":"boolvisitor"},{"name":"bool"}],"output":{"name":"result"}}],[11,"visit_str","","",5,{"inputs":[{"name":"boolvisitor"},{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","collections::string","",6,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","core::option","",7,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"visit_unit","serde::de::impls","",8,{"inputs":[{"name":"phantomdatavisitor"}],"output":{"name":"result"}}],[11,"deserialize","core::marker","",9,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"new","serde::de::impls","Construct a new sequence visitor.",10,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",10,{"inputs":[{"name":"binaryheapvisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","",10,{"inputs":[{"name":"binaryheapvisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","collections::binary_heap","",11,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"new","serde::de::impls","Construct a new sequence visitor.",12,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",12,{"inputs":[{"name":"btreesetvisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","",12,{"inputs":[{"name":"btreesetvisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","collections::btree::set","",13,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"new","serde::de::impls","Construct a new sequence visitor.",14,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",14,{"inputs":[{"name":"linkedlistvisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","",14,{"inputs":[{"name":"linkedlistvisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","collections::linked_list","",15,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"new","serde::de::impls","Construct a new sequence visitor.",16,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",16,{"inputs":[{"name":"hashsetvisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","",16,{"inputs":[{"name":"hashsetvisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","std::collections::hash::set","",17,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"new","serde::de::impls","Construct a new sequence visitor.",18,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",18,{"inputs":[{"name":"vecvisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","",18,{"inputs":[{"name":"vecvisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","collections::vec","",19,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"new","serde::de::impls","Construct a new sequence visitor.",20,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",20,{"inputs":[{"name":"vecdequevisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","",20,{"inputs":[{"name":"vecdequevisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","collections::vec_deque","",21,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"new","serde::de::impls","Construct a `TupleVisitor*&lt;T&gt;`.",22,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",22,{"inputs":[{"name":"tuplevisitor1"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",23,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",23,{"inputs":[{"name":"tuplevisitor2"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",24,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",24,{"inputs":[{"name":"tuplevisitor3"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",25,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",25,{"inputs":[{"name":"tuplevisitor4"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",26,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",26,{"inputs":[{"name":"tuplevisitor5"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",27,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",27,{"inputs":[{"name":"tuplevisitor6"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",28,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",28,{"inputs":[{"name":"tuplevisitor7"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",29,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",29,{"inputs":[{"name":"tuplevisitor8"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",30,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",30,{"inputs":[{"name":"tuplevisitor9"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",31,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",31,{"inputs":[{"name":"tuplevisitor10"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",32,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",32,{"inputs":[{"name":"tuplevisitor11"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",33,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",33,{"inputs":[{"name":"tuplevisitor12"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a `MapVisitor*&lt;T&gt;`.",34,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",34,{"inputs":[{"name":"btreemapvisitor"}],"output":{"name":"result"}}],[11,"visit_map","","",34,{"inputs":[{"name":"btreemapvisitor"},{"name":"visitor"}],"output":{"name":"result"}}],[11,"deserialize","collections::btree::map","",35,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"new","serde::de::impls","Construct a `MapVisitor*&lt;T&gt;`.",36,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",36,{"inputs":[{"name":"hashmapvisitor"}],"output":{"name":"result"}}],[11,"visit_map","","",36,{"inputs":[{"name":"hashmapvisitor"},{"name":"visitor"}],"output":{"name":"result"}}],[11,"deserialize","std::collections::hash::map","",37,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","std::net::ip","",38,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","","",39,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","std::net::addr","",40,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","","",41,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","","",42,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","std::path","",43,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","alloc::boxed","",44,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","alloc::arc","",45,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","alloc::rc","",46,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","collections::borrow","",47,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","core::result","",48,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","serde::de::impls","",49,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"value","serde::de","This module supports deserializing from primitives with the `ValueDeserializer` trait.",null,null],[3,"UnitDeserializer","serde::de::value","A helper deserializer that deserializes a `()`.",null,null],[3,"BoolDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I8Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I16Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"IsizeDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U8Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U16Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"UsizeDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"F32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"F64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"CharDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"StrDeserializer","","A helper deserializer that deserializes a `&amp;str`.",null,null],[3,"StringDeserializer","","A helper deserializer that deserializes a `String`.",null,null],[3,"SeqDeserializer","","A helper deserializer that deserializes a sequence.",null,null],[3,"SeqVisitorDeserializer","","A helper deserializer that deserializes a sequence using a `SeqVisitor`.",null,null],[3,"MapDeserializer","","A helper deserializer that deserializes a map.",null,null],[3,"MapVisitorDeserializer","","A helper deserializer that deserializes a map using a `MapVisitor`.",null,null],[3,"BytesDeserializer","","A helper deserializer that deserializes a `&amp;[u8]`.",null,null],[3,"ByteBufDeserializer","","A helper deserializer that deserializes a `Vec&lt;u8&gt;`.",null,null],[4,"Error","","This represents all the possible errors that can occur using the `ValueDeserializer`.",null,null],[13,"Custom","","The value had some custom error.",50,null],[13,"InvalidType","","The value had an incorrect type.",50,null],[13,"InvalidLength","","The value had an invalid length.",50,null],[13,"InvalidValue","","The value is invalid and cannot be deserialized.",50,null],[13,"EndOfStream","","EOF while deserializing a value.",50,null],[13,"UnknownVariant","","Unknown variant in enum.",50,null],[13,"UnknownField","","Unknown field in struct.",50,null],[13,"MissingField","","Struct is missing a field.",50,null],[8,"ValueDeserializer","","This trait converts primitive types into a deserializer.",null,null],[16,"Deserializer","","The actual deserializer type.",51,null],[10,"into_deserializer","","Convert this value into a deserializer.",51,{"inputs":[{"name":"valuedeserializer"}],"output":{"name":"deserializer"}}],[11,"eq","","",50,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",50,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"custom","","",50,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"end_of_stream","","",50,{"inputs":[],"output":{"name":"self"}}],[11,"invalid_type","","",50,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"invalid_value","","",50,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"invalid_length","","",50,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"unknown_variant","","",50,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"unknown_field","","",50,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"missing_field","","",50,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"fmt","","",50,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",50,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",50,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"deserialize","","",52,{"inputs":[{"name":"unitdeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",52,{"inputs":[{"name":"unitdeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",53,{"inputs":[{"name":"booldeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",54,{"inputs":[{"name":"i8deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",55,{"inputs":[{"name":"i16deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",56,{"inputs":[{"name":"i32deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",57,{"inputs":[{"name":"i64deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",58,{"inputs":[{"name":"isizedeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",59,{"inputs":[{"name":"u8deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",60,{"inputs":[{"name":"u16deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",61,{"inputs":[{"name":"u32deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",62,{"inputs":[{"name":"u64deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",63,{"inputs":[{"name":"usizedeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",64,{"inputs":[{"name":"f32deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",65,{"inputs":[{"name":"f64deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",66,{"inputs":[{"name":"chardeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","","",67,{"inputs":[{"name":"strdeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",67,null],[11,"visit_variant","","",67,{"inputs":[{"name":"strdeserializer"}],"output":{"name":"result"}}],[11,"visit_unit","","",67,{"inputs":[{"name":"strdeserializer"}],"output":{"name":"result"}}],[11,"into_deserializer","collections::string","",6,{"inputs":[{"name":"string"}],"output":{"name":"stringdeserializer"}}],[11,"deserialize","serde::de::value","",68,{"inputs":[{"name":"stringdeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",68,null],[11,"visit_variant","","",68,{"inputs":[{"name":"stringdeserializer"}],"output":{"name":"result"}}],[11,"visit_unit","","",68,{"inputs":[{"name":"stringdeserializer"}],"output":{"name":"result"}}],[11,"new","","Construct a new `SeqDeserializer&lt;I&gt;`.",69,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[11,"deserialize","","",69,{"inputs":[{"name":"seqdeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit","","",69,{"inputs":[{"name":"seqdeserializer"}],"output":{"name":"result"}}],[11,"end","","",69,{"inputs":[{"name":"seqdeserializer"}],"output":{"name":"result"}}],[11,"size_hint","","",69,null],[11,"into_deserializer","collections::vec","",19,{"inputs":[{"name":"vec"}],"output":{"name":"deserializer"}}],[11,"into_deserializer","collections::btree::set","",13,{"inputs":[{"name":"btreeset"}],"output":{"name":"deserializer"}}],[11,"into_deserializer","std::collections::hash::set","",17,{"inputs":[{"name":"hashset"}],"output":{"name":"deserializer"}}],[11,"new","serde::de::value","Construct a new `SeqVisitorDeserializer&lt;V_, E&gt;`.",70,{"inputs":[{"name":"v_"}],"output":{"name":"self"}}],[11,"deserialize","","",70,{"inputs":[{"name":"seqvisitordeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a new `MapDeserializer&lt;I, K, V&gt;`.",71,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[11,"deserialize","","",71,{"inputs":[{"name":"mapdeserializer"},{"name":"v_"}],"output":{"name":"result"}}],[11,"visit_key","","",71,{"inputs":[{"name":"mapdeserializer"}],"output":{"name":"result"}}],[11,"visit_value","","",71,{"inputs":[{"name":"mapdeserializer"}],"output":{"name":"result"}}],[11,"end","","",71,{"inputs":[{"name":"mapdeserializer"}],"output":{"name":"result"}}],[11,"size_hint","","",71,null],[11,"into_deserializer","collections::btree::map","",35,{"inputs":[{"name":"btreemap"}],"output":{"name":"deserializer"}}],[11,"into_deserializer","std::collections::hash::map","",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"deserializer"}}],[11,"new","serde::de::value","Construct a new `MapVisitorDeserializer&lt;V_, E&gt;`.",72,{"inputs":[{"name":"v_"}],"output":{"name":"self"}}],[11,"deserialize","","",72,{"inputs":[{"name":"mapvisitordeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"into_deserializer","serde::bytes","",0,{"inputs":[{"name":"bytes"}],"output":{"name":"bytesdeserializer"}}],[11,"deserialize","serde::de::value","",73,{"inputs":[{"name":"bytesdeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"into_deserializer","serde::bytes","",1,{"inputs":[{"name":"bytebuf"}],"output":{"name":"deserializer"}}],[11,"deserialize","serde::de::value","",74,{"inputs":[{"name":"bytebufdeserializer"},{"name":"v"}],"output":{"name":"result"}}],[8,"Error","serde::de","`Error` is a trait that allows a `Deserialize` to generically create a\n`Deserializer` error.",null,null],[10,"custom","","Raised when there is general error when deserializing a type.",75,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[10,"end_of_stream","","Raised when a `Deserialize` type unexpectedly hit the end of the stream.",75,{"inputs":[],"output":{"name":"self"}}],[11,"invalid_type","","Raised when a `Deserialize` was passed an incorrect type.",75,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"invalid_value","","Raised when a `Deserialize` was passed an incorrect value.",75,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"invalid_length","","Raised when a fixed sized sequence or map was passed in the wrong amount of arguments.",75,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"unknown_variant","","Raised when a `Deserialize` enum type received an unexpected variant.",75,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"unknown_field","","Raised when a `Deserialize` struct type received an unexpected struct field.",75,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"missing_field","","raised when a `deserialize` struct type did not receive a field.",75,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[8,"Deserialize","","`Deserialize` represents a type that can be deserialized.",null,null],[10,"deserialize","","Deserialize this value given this `Deserializer`.",76,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Deserializer","","`Deserializer` is a trait that can deserialize values by threading a `Visitor` trait through a\nvalue. It supports two entry point styles which enables different kinds of deserialization.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",77,null],[10,"deserialize","","This method walks a visitor through a value as it is being deserialized.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","This method hints that the `Deserialize` type is expecting a `bool` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_usize","","This method hints that the `Deserialize` type is expecting an `usize` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","This method hints that the `Deserialize` type is expecting an `u8` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","This method hints that the `Deserialize` type is expecting an `u16` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","This method hints that the `Deserialize` type is expecting an `u32` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","This method hints that the `Deserialize` type is expecting an `u64` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_isize","","This method hints that the `Deserialize` type is expecting an `isize` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","This method hints that the `Deserialize` type is expecting an `i8` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","This method hints that the `Deserialize` type is expecting an `i16` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","This method hints that the `Deserialize` type is expecting an `i32` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","This method hints that the `Deserialize` type is expecting an `i64` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","This method hints that the `Deserialize` type is expecting a `f32` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","This method hints that the `Deserialize` type is expecting a `f64` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","This method hints that the `Deserialize` type is expecting a `char` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","This method hints that the `Deserialize` type is expecting a `&amp;str` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","This method hints that the `Deserialize` type is expecting a `String` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","This method hints that the `Deserialize` type is expecting an `unit` value.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","This method hints that the `Deserialize` type is expecting an `Option` value. This allows\ndeserializers that encode an optional value as a nullable value to convert the null value\ninto a `None`, and a regular value as `Some(value)`.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","This method hints that the `Deserialize` type is expecting a sequence value. This allows\ndeserializers to parse sequences that aren&#39;t tagged as sequences.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_fixed_size_array","","This method hints that the `Deserialize` type is expecting a fixed size array. This allows\ndeserializers to parse arrays that aren&#39;t tagged as arrays.",77,{"inputs":[{"name":"deserializer"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","This method hints that the `Deserialize` type is expecting a `Vec&lt;u8&gt;`. This allows\ndeserializers that provide a custom byte vector serialization to properly deserialize the\ntype.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","This method hints that the `Deserialize` type is expecting a map of values. This allows\ndeserializers to parse sequences that aren&#39;t tagged as maps.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","This method hints that the `Deserialize` type is expecting a unit struct. This allows\ndeserializers to a unit struct that aren&#39;t tagged as a unit struct.",77,{"inputs":[{"name":"deserializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","This method hints that the `Deserialize` type is expecting a newtype struct. This allows\ndeserializers to a newtype struct that aren&#39;t tagged as a newtype struct.",77,{"inputs":[{"name":"deserializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","This method hints that the `Deserialize` type is expecting a tuple struct. This allows\ndeserializers to parse sequences that aren&#39;t tagged as sequences.",77,{"inputs":[{"name":"deserializer"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","This method hints that the `Deserialize` type is expecting a struct. This allows\ndeserializers to parse sequences that aren&#39;t tagged as maps.",77,null],[11,"deserialize_struct_field","","This method hints that the `Deserialize` type is expecting some sort of struct field\nname.  This allows deserializers to choose between &amp;str, usize, or &amp;[u8] to properly\ndeserialize a struct field.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","This method hints that the `Deserialize` type is expecting a tuple value. This allows\ndeserializers that provide a custom tuple serialization to properly deserialize the type.",77,{"inputs":[{"name":"deserializer"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","This method hints that the `Deserialize` type is expecting an enum value. This allows\ndeserializers that provide a custom enumeration serialization to properly deserialize the\ntype.",77,null],[11,"deserialize_ignored_any","","This method hints that the `Deserialize` type needs to deserialize a value whose type\ndoesn&#39;t matter because it is ignored.",77,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[8,"Visitor","","This trait represents a visitor that walks through a deserializer.",null,null],[16,"Value","","The value produced by this visitor.",78,null],[11,"visit_bool","","`visit_bool` deserializes a `bool` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"bool"}],"output":{"name":"result"}}],[11,"visit_isize","","`visit_isize` deserializes a `isize` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"isize"}],"output":{"name":"result"}}],[11,"visit_i8","","`visit_i8` deserializes a `i8` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"i8"}],"output":{"name":"result"}}],[11,"visit_i16","","`visit_i16` deserializes a `i16` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"i16"}],"output":{"name":"result"}}],[11,"visit_i32","","`visit_i32` deserializes a `i32` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"i32"}],"output":{"name":"result"}}],[11,"visit_i64","","`visit_i64` deserializes a `i64` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"i64"}],"output":{"name":"result"}}],[11,"visit_usize","","`visit_usize` deserializes a `usize` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"usize"}],"output":{"name":"result"}}],[11,"visit_u8","","`visit_u8` deserializes a `u8` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"u8"}],"output":{"name":"result"}}],[11,"visit_u16","","`visit_u16` deserializes a `u16` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"u16"}],"output":{"name":"result"}}],[11,"visit_u32","","`visit_u32` deserializes a `u32` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"u32"}],"output":{"name":"result"}}],[11,"visit_u64","","`visit_u64` deserializes a `u64` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"u64"}],"output":{"name":"result"}}],[11,"visit_f32","","`visit_f32` deserializes a `f32` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"f32"}],"output":{"name":"result"}}],[11,"visit_f64","","`visit_f64` deserializes a `f64` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"f64"}],"output":{"name":"result"}}],[11,"visit_char","","`visit_char` deserializes a `char` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"char"}],"output":{"name":"result"}}],[11,"visit_str","","`visit_str` deserializes a `&amp;str` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_string","","`visit_string` deserializes a `String` into a `Value`.  This allows a deserializer to avoid\na copy if it is deserializing a string from a `String` type.  By default it passes a `&amp;str`\nto the `visit_str` method.",78,{"inputs":[{"name":"visitor"},{"name":"string"}],"output":{"name":"result"}}],[11,"visit_unit","","`visit_unit` deserializes a `()` into a `Value`.",78,{"inputs":[{"name":"visitor"}],"output":{"name":"result"}}],[11,"visit_unit_struct","","`visit_unit_struct` deserializes a unit struct into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_none","","`visit_none` deserializes a none value into a `Value`.",78,{"inputs":[{"name":"visitor"}],"output":{"name":"result"}}],[11,"visit_some","","`visit_some` deserializes a value into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_newtype_struct","","`visit_newtype_struct` deserializes a value into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_seq","","`visit_bool` deserializes a `SeqVisitor` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_map","","`visit_map` deserializes a `MapVisitor` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_bytes","","`visit_bytes` deserializes a `&amp;[u8]` into a `Value`.",78,null],[11,"visit_byte_buf","","`visit_byte_buf` deserializes a `Vec&lt;u8&gt;` into a `Value`.",78,{"inputs":[{"name":"visitor"},{"name":"vec"}],"output":{"name":"result"}}],[8,"SeqVisitor","","`SeqVisitor` visits each item in a sequence.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",79,null],[10,"visit","","This returns a `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there\nare no more remaining items.",79,{"inputs":[{"name":"seqvisitor"}],"output":{"name":"result"}}],[10,"end","","This signals to the `SeqVisitor` that the `Visitor` does not expect any more items.",79,{"inputs":[{"name":"seqvisitor"}],"output":{"name":"result"}}],[11,"size_hint","","Return the lower and upper bound of items remaining in the sequence.",79,null],[8,"MapVisitor","","`MapVisitor` visits each item in a sequence.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",80,null],[11,"visit","","This returns a `Ok(Some((key, value)))` for the next (key-value) pair in the map, or\n`Ok(None)` if there are no more remaining items.",80,{"inputs":[{"name":"mapvisitor"}],"output":{"name":"result"}}],[10,"visit_key","","This returns a `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no\nmore remaining items.",80,{"inputs":[{"name":"mapvisitor"}],"output":{"name":"result"}}],[10,"visit_value","","This returns a `Ok(value)` for the next value in the map.",80,{"inputs":[{"name":"mapvisitor"}],"output":{"name":"result"}}],[10,"end","","This signals to the `MapVisitor` that the `Visitor` does not expect any more items.",80,{"inputs":[{"name":"mapvisitor"}],"output":{"name":"result"}}],[11,"size_hint","","Return the lower and upper bound of items remaining in the sequence.",80,null],[11,"missing_field","","Report that the struct has a field that wasn&#39;t deserialized",80,{"inputs":[{"name":"mapvisitor"},{"name":"str"}],"output":{"name":"result"}}],[8,"EnumVisitor","","`EnumVisitor` is a visitor that is created by the `Deserialize` and passed to the\n`Deserializer` in order to deserialize enums.",null,null],[16,"Value","","The value produced by this visitor.",81,null],[10,"visit","","Visit the specific variant with the `VariantVisitor`.",81,{"inputs":[{"name":"enumvisitor"},{"name":"v"}],"output":{"name":"result"}}],[8,"VariantVisitor","","`VariantVisitor` is a visitor that is created by the `Deserializer` and passed to the\n`Deserialize` in order to deserialize a specific enum variant.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",82,null],[10,"visit_variant","","`visit_variant` is called to identify which variant to deserialize.",82,{"inputs":[{"name":"variantvisitor"}],"output":{"name":"result"}}],[11,"visit_unit","","`visit_unit` is called when deserializing a variant with no values.",82,{"inputs":[{"name":"variantvisitor"}],"output":{"name":"result"}}],[11,"visit_newtype","","`visit_newtype` is called when deserializing a variant with a single value. By default this\nuses the `visit_tuple` method to deserialize the value.",82,{"inputs":[{"name":"variantvisitor"}],"output":{"name":"result"}}],[11,"visit_tuple","","`visit_tuple` is called when deserializing a tuple-like variant.",82,{"inputs":[{"name":"variantvisitor"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_struct","","`visit_struct` is called when deserializing a struct-like variant.",82,null],[11,"fmt","","",3,{"inputs":[{"name":"type"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[0,"iter","serde","Module that contains helper iterators.",null,null],[3,"LineColIterator","serde::iter","Iterator over a byte stream that tracks the current position&#39;s line and column.",null,null],[11,"new","","Construct a new `LineColIterator&lt;Iter&gt;`.",83,{"inputs":[{"name":"iter"}],"output":{"name":"linecoliterator"}}],[11,"line","","Report the current line inside the iterator.",83,{"inputs":[{"name":"linecoliterator"}],"output":{"name":"usize"}}],[11,"col","","Report the current column inside the iterator.",83,{"inputs":[{"name":"linecoliterator"}],"output":{"name":"usize"}}],[11,"get_ref","","Gets a reference to the underlying iterator.",83,{"inputs":[{"name":"linecoliterator"}],"output":{"name":"iter"}}],[11,"get_mut","","Gets a mutable reference to the underlying iterator.",83,{"inputs":[{"name":"linecoliterator"}],"output":{"name":"iter"}}],[11,"into_inner","","Unwraps this `LineColIterator`, returning the underlying iterator.",83,{"inputs":[{"name":"linecoliterator"}],"output":{"name":"iter"}}],[11,"peek","","peeks at the next value",83,{"inputs":[{"name":"linecoliterator"}],"output":{"name":"option"}}],[11,"next","","",83,{"inputs":[{"name":"linecoliterator"}],"output":{"name":"option"}}],[0,"ser","serde","Generic serialization framework.",null,null],[0,"impls","serde::ser","Implementations for all of Rust&#39;s builtin types.",null,null],[3,"SeqIteratorVisitor","serde::ser::impls","A `serde::Visitor` for sequence iterators.",null,null],[3,"TupleVisitor1","","A tuple visitor.",null,null],[3,"TupleVisitor2","","A tuple visitor.",null,null],[3,"TupleVisitor3","","A tuple visitor.",null,null],[3,"TupleVisitor4","","A tuple visitor.",null,null],[3,"TupleVisitor5","","A tuple visitor.",null,null],[3,"TupleVisitor6","","A tuple visitor.",null,null],[3,"TupleVisitor7","","A tuple visitor.",null,null],[3,"TupleVisitor8","","A tuple visitor.",null,null],[3,"TupleVisitor9","","A tuple visitor.",null,null],[3,"TupleVisitor10","","A tuple visitor.",null,null],[3,"TupleVisitor11","","A tuple visitor.",null,null],[3,"TupleVisitor12","","A tuple visitor.",null,null],[3,"MapIteratorVisitor","","A `serde::Visitor` for (key, value) map iterators.",null,null],[11,"serialize","collections::string","",6,{"inputs":[{"name":"string"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","core::option","",7,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"visit","","",7,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",7,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"serialize","core::marker","",9,{"inputs":[{"name":"phantomdata"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","serde::ser::impls","Construct a new `SeqIteratorVisitor&lt;Iter&gt;`.",84,{"inputs":[{"name":"iter"},{"name":"option"}],"output":{"name":"seqiteratorvisitor"}}],[11,"visit","","",84,{"inputs":[{"name":"seqiteratorvisitor"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",84,{"inputs":[{"name":"seqiteratorvisitor"}],"output":{"name":"option"}}],[11,"serialize","collections::binary_heap","",11,{"inputs":[{"name":"binaryheap"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","collections::btree::set","",13,{"inputs":[{"name":"btreeset"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","std::collections::hash::set","",17,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","collections::linked_list","",15,{"inputs":[{"name":"linkedlist"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","collections::vec","",19,{"inputs":[{"name":"vec"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","collections::vec_deque","",21,{"inputs":[{"name":"vecdeque"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","serde::ser::impls","Construct a new, empty `TupleVisitor`.",85,null],[11,"visit","","",85,{"inputs":[{"name":"tuplevisitor1"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",85,{"inputs":[{"name":"tuplevisitor1"}],"output":{"name":"option"}}],[11,"new","","Construct a new, empty `TupleVisitor`.",86,null],[11,"visit","","",86,{"inputs":[{"name":"tuplevisitor2"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",86,{"inputs":[{"name":"tuplevisitor2"}],"output":{"name":"option"}}],[11,"new","","Construct a new, empty `TupleVisitor`.",87,null],[11,"visit","","",87,{"inputs":[{"name":"tuplevisitor3"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",87,{"inputs":[{"name":"tuplevisitor3"}],"output":{"name":"option"}}],[11,"new","","Construct a new, empty `TupleVisitor`.",88,null],[11,"visit","","",88,{"inputs":[{"name":"tuplevisitor4"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",88,{"inputs":[{"name":"tuplevisitor4"}],"output":{"name":"option"}}],[11,"new","","Construct a new, empty `TupleVisitor`.",89,null],[11,"visit","","",89,{"inputs":[{"name":"tuplevisitor5"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",89,{"inputs":[{"name":"tuplevisitor5"}],"output":{"name":"option"}}],[11,"new","","Construct a new, empty `TupleVisitor`.",90,null],[11,"visit","","",90,{"inputs":[{"name":"tuplevisitor6"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",90,{"inputs":[{"name":"tuplevisitor6"}],"output":{"name":"option"}}],[11,"new","","Construct a new, empty `TupleVisitor`.",91,null],[11,"visit","","",91,{"inputs":[{"name":"tuplevisitor7"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",91,{"inputs":[{"name":"tuplevisitor7"}],"output":{"name":"option"}}],[11,"new","","Construct a new, empty `TupleVisitor`.",92,null],[11,"visit","","",92,{"inputs":[{"name":"tuplevisitor8"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",92,{"inputs":[{"name":"tuplevisitor8"}],"output":{"name":"option"}}],[11,"new","","Construct a new, empty `TupleVisitor`.",93,null],[11,"visit","","",93,{"inputs":[{"name":"tuplevisitor9"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",93,{"inputs":[{"name":"tuplevisitor9"}],"output":{"name":"option"}}],[11,"new","","Construct a new, empty `TupleVisitor`.",94,null],[11,"visit","","",94,{"inputs":[{"name":"tuplevisitor10"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",94,{"inputs":[{"name":"tuplevisitor10"}],"output":{"name":"option"}}],[11,"new","","Construct a new, empty `TupleVisitor`.",95,null],[11,"visit","","",95,{"inputs":[{"name":"tuplevisitor11"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",95,{"inputs":[{"name":"tuplevisitor11"}],"output":{"name":"option"}}],[11,"new","","Construct a new, empty `TupleVisitor`.",96,null],[11,"visit","","",96,{"inputs":[{"name":"tuplevisitor12"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",96,{"inputs":[{"name":"tuplevisitor12"}],"output":{"name":"option"}}],[11,"new","","Construct a new `MapIteratorVisitor&lt;Iter&gt;`.",97,{"inputs":[{"name":"iter"},{"name":"option"}],"output":{"name":"mapiteratorvisitor"}}],[11,"visit","","",97,{"inputs":[{"name":"mapiteratorvisitor"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",97,{"inputs":[{"name":"mapiteratorvisitor"}],"output":{"name":"option"}}],[11,"serialize","collections::btree::map","",35,{"inputs":[{"name":"btreemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","std::collections::hash::map","",37,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","alloc::boxed","",44,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","alloc::rc","",46,{"inputs":[{"name":"rc"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","alloc::arc","",45,{"inputs":[{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","collections::borrow","",47,{"inputs":[{"name":"cow"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","core::result","",48,{"inputs":[{"name":"result"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","std::net::ip","",38,{"inputs":[{"name":"ipv4addr"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","","",39,{"inputs":[{"name":"ipv6addr"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","std::net::addr","",40,{"inputs":[{"name":"socketaddr"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","","",41,{"inputs":[{"name":"socketaddrv4"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","","",42,{"inputs":[{"name":"socketaddrv6"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","std::path","",98,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","","",43,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"result"}}],[8,"Error","serde::ser","`Error` is a trait that allows a `Serialize` to generically create a\n`Serializer` error.",null,null],[10,"custom","","Raised when there is general error when deserializing a type.",99,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"invalid_value","","Raised when a `Serialize` was passed an incorrect value.",99,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[8,"Serialize","","A trait that describes a type that can be serialized by a `Serializer`.",null,null],[10,"serialize","","Serializes this value into this serializer.",100,{"inputs":[{"name":"serialize"},{"name":"s"}],"output":{"name":"result"}}],[8,"Serializer","","A trait that describes a type that can serialize a stream of values into the underlying format.",null,null],[16,"Error","","The error type that can be returned if some error occurs during serialization.",101,null],[10,"serialize_bool","","Serializes a `bool` value.",101,{"inputs":[{"name":"serializer"},{"name":"bool"}],"output":{"name":"result"}}],[11,"serialize_isize","","Serializes a `isize` value. By default it casts the value to a `i64` and\npasses it to the `serialize_i64` method.",101,{"inputs":[{"name":"serializer"},{"name":"isize"}],"output":{"name":"result"}}],[11,"serialize_i8","","Serializes a `i8` value. By default it casts the value to a `i64` and\npasses it to the `serialize_i64` method.",101,{"inputs":[{"name":"serializer"},{"name":"i8"}],"output":{"name":"result"}}],[11,"serialize_i16","","Serializes a `i16` value. By default it casts the value to a `i64` and\npasses it to the `serialize_i64` method.",101,{"inputs":[{"name":"serializer"},{"name":"i16"}],"output":{"name":"result"}}],[11,"serialize_i32","","Serializes a `i32` value. By default it casts the value to a `i64` and\npasses it to the `serialize_i64` method.",101,{"inputs":[{"name":"serializer"},{"name":"i32"}],"output":{"name":"result"}}],[10,"serialize_i64","","Serializes a `i64` value.",101,{"inputs":[{"name":"serializer"},{"name":"i64"}],"output":{"name":"result"}}],[11,"serialize_usize","","Serializes a `usize` value. By default it casts the value to a `u64` and\npasses it to the `serialize_u64` method.",101,{"inputs":[{"name":"serializer"},{"name":"usize"}],"output":{"name":"result"}}],[11,"serialize_u8","","Serializes a `u8` value. By default it casts the value to a `u64` and passes\nit to the `serialize_u64` method.",101,{"inputs":[{"name":"serializer"},{"name":"u8"}],"output":{"name":"result"}}],[11,"serialize_u16","","Serializes a `u32` value. By default it casts the value to a `u64` and passes\nit to the `serialize_u64` method.",101,{"inputs":[{"name":"serializer"},{"name":"u16"}],"output":{"name":"result"}}],[11,"serialize_u32","","Serializes a `u32` value. By default it casts the value to a `u64` and passes\nit to the `serialize_u64` method.",101,{"inputs":[{"name":"serializer"},{"name":"u32"}],"output":{"name":"result"}}],[10,"serialize_u64","","`Serializes a `u64` value.",101,{"inputs":[{"name":"serializer"},{"name":"u64"}],"output":{"name":"result"}}],[11,"serialize_f32","","Serializes a `f32` value. By default it casts the value to a `f64` and passes\nit to the `serialize_f64` method.",101,{"inputs":[{"name":"serializer"},{"name":"f32"}],"output":{"name":"result"}}],[10,"serialize_f64","","Serializes a `f64` value.",101,{"inputs":[{"name":"serializer"},{"name":"f64"}],"output":{"name":"result"}}],[11,"serialize_char","","Serializes a character. By default it serializes it as a `&amp;str` containing a\nsingle character.",101,{"inputs":[{"name":"serializer"},{"name":"char"}],"output":{"name":"result"}}],[10,"serialize_str","","Serializes a `&amp;str`.",101,{"inputs":[{"name":"serializer"},{"name":"str"}],"output":{"name":"result"}}],[11,"serialize_bytes","","Enables those serialization formats that support serializing\nbyte slices separately from generic arrays. By default it serializes as a regular array.",101,null],[10,"serialize_unit","","Serializes a `()` value.",101,{"inputs":[{"name":"serializer"}],"output":{"name":"result"}}],[11,"serialize_unit_struct","","Serializes a unit struct value.",101,{"inputs":[{"name":"serializer"},{"name":"str"}],"output":{"name":"result"}}],[11,"serialize_unit_variant","","Serializes a unit variant, otherwise known as a variant with no arguments.",101,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"serialize_newtype_struct","","Allows a tuple struct with a single element, also known as a\nnewtyped value, to be more efficiently serialized than a tuple struct with multiple items.\nBy default it just serializes the value as a tuple struct sequence.",101,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_newtype_variant","","Allows a variant with a single item to be more efficiently\nserialized than a variant with multiple items. By default it just serializes the value as a\ntuple variant sequence.",101,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"usize"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_none","","Serializes a `None` value..serialize",101,{"inputs":[{"name":"serializer"}],"output":{"name":"result"}}],[10,"serialize_some","","Serializes a `Some(...)` value.",101,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[10,"serialize_seq","","Serializes a sequence.",101,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[10,"serialize_seq_elt","","Serializes a sequence element.",101,{"inputs":[{"name":"serializer"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_tuple","","Serializes a tuple.",101,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_tuple_elt","","Serializes a tuple element.",101,{"inputs":[{"name":"serializer"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_fixed_size_array","","Serializes a fixed-size array.",101,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_tuple_struct","","Serializes a tuple struct.",101,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_tuple_struct_elt","","Serializes a tuple struct element.",101,{"inputs":[{"name":"serializer"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_tuple_variant","","Serializes a tuple variant.",101,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"usize"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_tuple_variant_elt","","Serializes a tuple element.",101,{"inputs":[{"name":"serializer"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_map","","Serializes a map.",101,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[10,"serialize_map_elt","","Serializes a map element (key-value pair).",101,{"inputs":[{"name":"serializer"},{"name":"k"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_struct","","Serializes a struct.",101,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_struct_elt","","Serializes an element of a struct.",101,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_struct_variant","","Serializes a struct variant.",101,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"usize"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"serialize_struct_variant_elt","","Serializes an element of a struct variant.",101,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[8,"SeqVisitor","","A trait that is used by a `Serialize` to iterate through a sequence.",null,null],[10,"visit","","Serializes a sequence item in the serializer.",102,{"inputs":[{"name":"seqvisitor"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","Return the length of the sequence if known.",102,{"inputs":[{"name":"seqvisitor"}],"output":{"name":"option"}}],[8,"MapVisitor","","A trait that is used by a `Serialize` to iterate through a map.",null,null],[10,"visit","","Serializes a map item in the serializer.",103,{"inputs":[{"name":"mapvisitor"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","Return the length of the map if known.",103,{"inputs":[{"name":"mapvisitor"}],"output":{"name":"option"}}]],"paths":[[3,"Bytes"],[3,"ByteBuf"],[3,"ByteBufVisitor"],[4,"Type"],[3,"UnitVisitor"],[3,"BoolVisitor"],[3,"String"],[4,"Option"],[3,"PhantomDataVisitor"],[3,"PhantomData"],[3,"BinaryHeapVisitor"],[3,"BinaryHeap"],[3,"BTreeSetVisitor"],[3,"BTreeSet"],[3,"LinkedListVisitor"],[3,"LinkedList"],[3,"HashSetVisitor"],[3,"HashSet"],[3,"VecVisitor"],[3,"Vec"],[3,"VecDequeVisitor"],[3,"VecDeque"],[3,"TupleVisitor1"],[3,"TupleVisitor2"],[3,"TupleVisitor3"],[3,"TupleVisitor4"],[3,"TupleVisitor5"],[3,"TupleVisitor6"],[3,"TupleVisitor7"],[3,"TupleVisitor8"],[3,"TupleVisitor9"],[3,"TupleVisitor10"],[3,"TupleVisitor11"],[3,"TupleVisitor12"],[3,"BTreeMapVisitor"],[3,"BTreeMap"],[3,"HashMapVisitor"],[3,"HashMap"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"PathBuf"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Cow"],[4,"Result"],[3,"IgnoredAny"],[4,"Error"],[8,"ValueDeserializer"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U32Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"SeqDeserializer"],[3,"SeqVisitorDeserializer"],[3,"MapDeserializer"],[3,"MapVisitorDeserializer"],[3,"BytesDeserializer"],[3,"ByteBufDeserializer"],[8,"Error"],[8,"Deserialize"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqVisitor"],[8,"MapVisitor"],[8,"EnumVisitor"],[8,"VariantVisitor"],[3,"LineColIterator"],[3,"SeqIteratorVisitor"],[3,"TupleVisitor1"],[3,"TupleVisitor2"],[3,"TupleVisitor3"],[3,"TupleVisitor4"],[3,"TupleVisitor5"],[3,"TupleVisitor6"],[3,"TupleVisitor7"],[3,"TupleVisitor8"],[3,"TupleVisitor9"],[3,"TupleVisitor10"],[3,"TupleVisitor11"],[3,"TupleVisitor12"],[3,"MapIteratorVisitor"],[3,"Path"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SeqVisitor"],[8,"MapVisitor"]]};
searchIndex["quasi_codegen"] = {"doc":"","items":[[5,"register","quasi_codegen","",null,{"inputs":[{"name":"registry"}],"output":null}]],"paths":[]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","items":[[5,"zero","num","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[0,"complex","","Complex numbers.",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"fmt","","",0,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"clone","","",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"eq","","",0,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"new","","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn&#39;t necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"scale","","Multiplies `self` by the scalar `t`.",0,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"unscale","","Divides `self` by the scalar `t`.",0,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"inv","","Returns `1/self`",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"norm","","Calculate |self|",0,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"arg","","Calculate the principal Arg of self.",0,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"sin","","Computes the sine of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"cos","","Computes the cosine of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"tan","","Computes the tangent of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"is_nan","","Checks if the given complex number is NaN",0,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"is_infinite","","Checks if the given complex number is infinite",0,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"is_finite","","Checks if the given complex number is finite",0,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"is_normal","","Checks if the given complex number is normal",0,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"neg","","",0,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"integer","num","Integer trait and functions.",null,null],[5,"div_rem","num::integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",1,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",1,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",1,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",1,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",1,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",1,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",1,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",1,null],[0,"iter","num","External iterators for generic mathematics",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",2,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",2,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next_back","","",2,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",3,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",3,null],[11,"next_back","","",3,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"clone","","",4,{"inputs":[{"name":"rangestep"}],"output":{"name":"rangestep"}}],[11,"next","","",4,{"inputs":[{"name":"rangestep"}],"output":{"name":"option"}}],[11,"clone","","",5,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"rangestepinclusive"}}],[11,"next","","",5,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"option"}}],[0,"traits","num","Numeric traits for generic mathematics",null,null],[3,"ParseFloatError","num::traits","",null,null],[12,"kind","","",6,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",7,null],[13,"Invalid","","",7,null],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","Parse error for `from_str_radix`",8,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",8,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",9,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,{"inputs":[{"name":"zero"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",10,{"inputs":[],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",11,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",11,{"inputs":[{"name":"signed"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",11,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",11,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",11,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",12,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",12,{"inputs":[],"output":{"name":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",13,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",13,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",14,{"inputs":[{"name":"checkedadd"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",15,{"inputs":[{"name":"checkedsub"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",16,{"inputs":[{"name":"checkedmul"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",17,{"inputs":[{"name":"checkeddiv"},{"name":"self"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",18,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",18,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",18,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",18,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",18,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",18,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",18,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",18,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",18,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",18,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",18,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",18,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",18,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",18,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",19,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",19,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",19,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",19,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",19,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",19,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",19,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",19,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",19,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",19,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",19,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",19,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",20,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",21,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",22,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",22,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",22,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",22,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",22,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",22,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",22,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",22,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",22,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",22,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",22,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",22,{"inputs":[{"name":"float"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",22,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",22,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",22,{"inputs":[{"name":"float"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",22,{"inputs":[{"name":"float"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",22,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",22,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",22,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",22,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",22,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",22,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",22,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",22,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",22,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",22,null],[11,"fmt","","",6,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Complex"],[8,"Integer"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"Float"]]};
searchIndex["aster"] = {"doc":"","items":[[3,"AstBuilder","aster","",null,null],[0,"arm","","",null,null],[3,"ArmBuilder","aster::arm","",null,null],[3,"ArmPatBuilder","","",null,null],[3,"ArmBodyBuilder","","",null,null],[11,"new","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",0,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",0,{"inputs":[{"name":"armbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_attrs","","",0,{"inputs":[{"name":"armbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_attr","","",0,{"inputs":[{"name":"armbuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"attr","","",0,{"inputs":[{"name":"armbuilder"}],"output":{"name":"attrbuilder"}}],[11,"with_pats","","",0,{"inputs":[{"name":"armbuilder"},{"name":"i"}],"output":{"name":"armpatbuilder"}}],[11,"with_pat","","",0,{"inputs":[{"name":"armbuilder"},{"name":"p"}],"output":{"name":"armpatbuilder"}}],[11,"pat","","",0,{"inputs":[{"name":"armbuilder"}],"output":{"name":"patbuilder"}}],[11,"invoke","","",0,{"inputs":[{"name":"armbuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"invoke","","",0,{"inputs":[{"name":"armbuilder"},{"name":"p"}],"output":{"name":"armpatbuilder"}}],[11,"with_pats","","",1,{"inputs":[{"name":"armpatbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_pat","","",1,{"inputs":[{"name":"armpatbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"pat","","",1,{"inputs":[{"name":"armpatbuilder"}],"output":{"name":"patbuilder"}}],[11,"with_guard","","",1,{"inputs":[{"name":"armpatbuilder"},{"name":"option"}],"output":{"name":"armbodybuilder"}}],[11,"guard","","",1,{"inputs":[{"name":"armpatbuilder"}],"output":{"name":"exprbuilder"}}],[11,"body","","",1,{"inputs":[{"name":"armpatbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build_arm_","","",1,{"inputs":[{"name":"armpatbuilder"},{"name":"option"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",1,{"inputs":[{"name":"armpatbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"invoke","","",1,{"inputs":[{"name":"armpatbuilder"},{"name":"p"}],"output":{"name":"armbodybuilder"}}],[11,"body","","",2,{"inputs":[{"name":"armbodybuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",2,{"inputs":[{"name":"armbodybuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",2,{"inputs":[{"name":"armbodybuilder"},{"name":"p"}],"output":{"name":"result"}}],[0,"attr","aster","",null,null],[3,"AttrBuilder","aster::attr","",null,null],[3,"AttrListBuilder","","",null,null],[3,"AttrNameValueBuilder","","",null,null],[11,"new","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",3,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",3,{"inputs":[{"name":"attrbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"inner","","",3,{"inputs":[{"name":"attrbuilder"}],"output":{"name":"self"}}],[11,"build_meta_item","","",3,{"inputs":[{"name":"attrbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_meta_item_","","",3,{"inputs":[{"name":"attrbuilder"},{"name":"metaitemkind"}],"output":{"name":"result"}}],[11,"word","","",3,{"inputs":[{"name":"attrbuilder"},{"name":"t"}],"output":{"name":"result"}}],[11,"list","","",3,{"inputs":[{"name":"attrbuilder"},{"name":"t"}],"output":{"name":"attrlistbuilder"}}],[11,"name_value","","",3,{"inputs":[{"name":"attrbuilder"},{"name":"t"}],"output":{"name":"litbuilder"}}],[11,"automatically_derived","","",3,{"inputs":[{"name":"attrbuilder"}],"output":{"name":"result"}}],[11,"inline","","",3,{"inputs":[{"name":"attrbuilder"}],"output":{"name":"result"}}],[11,"test","","",3,{"inputs":[{"name":"attrbuilder"}],"output":{"name":"result"}}],[11,"allow","","",3,{"inputs":[{"name":"attrbuilder"},{"name":"i"}],"output":{"name":"result"}}],[11,"warn","","",3,{"inputs":[{"name":"attrbuilder"},{"name":"i"}],"output":{"name":"result"}}],[11,"deny","","",3,{"inputs":[{"name":"attrbuilder"},{"name":"i"}],"output":{"name":"result"}}],[11,"features","","",3,{"inputs":[{"name":"attrbuilder"},{"name":"i"}],"output":{"name":"result"}}],[11,"plugins","","",3,{"inputs":[{"name":"attrbuilder"},{"name":"i"}],"output":{"name":"result"}}],[11,"doc","","Create a #[doc = &quot;...&quot;] node. Note that callers of this must make sure to prefix their\ncomments with either &quot;///&quot; or &quot;/\\*\\*&quot; if an outer comment, or &quot;//!&quot; or &quot;/\\*!&quot; if an inner\ncomment.",3,{"inputs":[{"name":"attrbuilder"},{"name":"t"}],"output":{"name":"result"}}],[11,"invoke","","",3,{"inputs":[{"name":"attrbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",3,{"inputs":[{"name":"attrbuilder"},{"name":"metaitemkind"}],"output":{"name":"result"}}],[11,"with_callback","","",4,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",4,{"inputs":[{"name":"attrlistbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_meta_items","","",4,{"inputs":[{"name":"attrlistbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_meta_items_","","",4,{"inputs":[{"name":"attrlistbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_meta_item","","",4,{"inputs":[{"name":"attrlistbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"with_meta_item_kind","","",4,{"inputs":[{"name":"attrlistbuilder"},{"name":"metaitemkind"}],"output":{"name":"self"}}],[11,"words","","",4,{"inputs":[{"name":"attrlistbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"word","","",4,{"inputs":[{"name":"attrlistbuilder"},{"name":"t"}],"output":{"name":"self"}}],[11,"list","","",4,{"inputs":[{"name":"attrlistbuilder"},{"name":"t"}],"output":{"name":"attrlistbuilder"}}],[11,"name_value","","",4,{"inputs":[{"name":"attrlistbuilder"},{"name":"t"}],"output":{"name":"litbuilder"}}],[11,"build","","",4,{"inputs":[{"name":"attrlistbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",4,{"inputs":[{"name":"attrlistbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"invoke","","",4,{"inputs":[{"name":"attrlistbuilder"},{"name":"metaitemkind"}],"output":{"name":"self"}}],[11,"invoke","","",5,{"inputs":[{"name":"attrnamevaluebuilder"},{"name":"p"}],"output":{"name":"result"}}],[0,"block","aster","",null,null],[3,"BlockBuilder","aster::block","",null,null],[11,"new","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",6,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",6,{"inputs":[{"name":"blockbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"unsafe_","","",6,{"inputs":[{"name":"blockbuilder"}],"output":{"name":"self"}}],[11,"with_stmts","","",6,{"inputs":[{"name":"blockbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_stmt","","",6,{"inputs":[{"name":"blockbuilder"},{"name":"stmt"}],"output":{"name":"self"}}],[11,"stmt","","",6,{"inputs":[{"name":"blockbuilder"}],"output":{"name":"stmtbuilder"}}],[11,"build_expr","","",6,{"inputs":[{"name":"blockbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"expr","","",6,{"inputs":[{"name":"blockbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",6,{"inputs":[{"name":"blockbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",6,{"inputs":[{"name":"blockbuilder"},{"name":"stmt"}],"output":{"name":"self"}}],[11,"invoke","","",6,{"inputs":[{"name":"blockbuilder"},{"name":"p"}],"output":{"name":"result"}}],[0,"constant","aster","",null,null],[3,"Const","aster::constant","",null,null],[12,"ty","","",7,null],[12,"expr","","",7,null],[3,"ConstBuilder","","",null,null],[11,"new","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",8,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",8,{"inputs":[{"name":"constbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_expr","","",8,{"inputs":[{"name":"constbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"expr","","",8,{"inputs":[{"name":"constbuilder"}],"output":{"name":"exprbuilder"}}],[11,"ty","","",8,{"inputs":[{"name":"constbuilder"}],"output":{"name":"tybuilder"}}],[11,"build","","",8,{"inputs":[{"name":"constbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",8,{"inputs":[{"name":"constbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"invoke","","",8,{"inputs":[{"name":"constbuilder"},{"name":"p"}],"output":{"name":"result"}}],[0,"expr","aster","",null,null],[3,"ExprBuilder","aster::expr","",null,null],[3,"ExprUnaryBuilder","","",null,null],[3,"ExprBinaryLhsBuilder","","",null,null],[3,"ExprBinaryRhsBuilder","","",null,null],[3,"ExprReturnBuilder","","",null,null],[3,"ExprTupleBuilder","","",null,null],[3,"ExprStructBuilder","","",null,null],[3,"ExprStructPathBuilder","","",null,null],[3,"ExprStructFieldBuilder","","",null,null],[3,"ExprCallBuilder","","",null,null],[3,"ExprCallArgsBuilder","","",null,null],[3,"ExprMethodCallBuilder","","",null,null],[3,"ExprMethodCallArgsBuilder","","",null,null],[3,"ExprRefBuilder","","",null,null],[3,"ExprPathBuilder","","",null,null],[3,"ExprAssignBuilder","","",null,null],[3,"ExprAssignLhsBuilder","","",null,null],[3,"ExprAssignOpBuilder","","",null,null],[3,"ExprAssignOpLhsBuilder","","",null,null],[3,"ExprIndexBuilder","","",null,null],[3,"ExprIndexLhsBuilder","","",null,null],[3,"ExprRepeatBuilder","","",null,null],[3,"ExprRepeatLhsBuilder","","",null,null],[3,"ExprLoopBuilder","","",null,null],[3,"ExprIfBuilder","","",null,null],[3,"ExprIfThenBuilder","","",null,null],[3,"ExprIfThenElseBuilder","","",null,null],[3,"ExprElseIfBuilder","","",null,null],[3,"ExprElseIfThenBuilder","","",null,null],[3,"ExprMatchBuilder","","",null,null],[3,"ExprMatchArmBuilder","","",null,null],[3,"ExprParenBuilder","","",null,null],[3,"ExprFieldBuilder","","",null,null],[3,"ExprTupFieldBuilder","","",null,null],[3,"ExprSliceBuilder","","",null,null],[3,"ExprVecBuilder","","",null,null],[3,"ExprTryBuilder","","",null,null],[11,"new","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",9,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"build","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"span","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_attr","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"attr","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"attrbuilder"}}],[11,"build_expr_kind","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"exprkind"}],"output":{"name":"result"}}],[11,"build_path","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"build_qpath","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"qself"},{"name":"path"}],"output":{"name":"result"}}],[11,"path","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"pathbuilder"}}],[11,"qpath","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"qpathbuilder"}}],[11,"id","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"i"}],"output":{"name":"result"}}],[11,"build_lit","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"lit","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"litbuilder"}}],[11,"bool","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"bool"}],"output":{"name":"result"}}],[11,"true_","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"result"}}],[11,"false_","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"result"}}],[11,"int","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"i64"}],"output":{"name":"result"}}],[11,"uint","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"u64"}],"output":{"name":"result"}}],[11,"isize","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"isize"}],"output":{"name":"result"}}],[11,"i8","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"i8"}],"output":{"name":"result"}}],[11,"i16","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"i16"}],"output":{"name":"result"}}],[11,"i32","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"i32"}],"output":{"name":"result"}}],[11,"i64","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"i64"}],"output":{"name":"result"}}],[11,"usize","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"usize"}],"output":{"name":"result"}}],[11,"u8","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"u8"}],"output":{"name":"result"}}],[11,"u16","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"u16"}],"output":{"name":"result"}}],[11,"u32","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"u32"}],"output":{"name":"result"}}],[11,"u64","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"u64"}],"output":{"name":"result"}}],[11,"f32","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"s"}],"output":{"name":"result"}}],[11,"f64","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"s"}],"output":{"name":"result"}}],[11,"str","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"s"}],"output":{"name":"result"}}],[11,"build_unary","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"unop"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_deref","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_not","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_neg","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"unary","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"unop"}],"output":{"name":"exprbuilder"}}],[11,"deref","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"not","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"neg","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build_binary","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"binopkind"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_add","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_sub","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_mul","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_div","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_rem","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_and","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_or","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_bit_xor","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_bit_and","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_bit_or","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_shl","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_shr","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_eq","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_lt","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_le","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_ne","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_ge","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_gt","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"binary","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"binopkind"}],"output":{"name":"exprbuilder"}}],[11,"add","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"sub","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"mul","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"div","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"rem","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"and","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"or","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"bit_xor","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"bit_and","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"bit_or","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"shl","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"shr","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"eq","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"lt","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"le","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"ne","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"ge","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"gt","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"ref_","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"mut_ref","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"break_","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"result"}}],[11,"break_to","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"i"}],"output":{"name":"result"}}],[11,"continue_","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"result"}}],[11,"continue_to","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"i"}],"output":{"name":"result"}}],[11,"return_","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"result"}}],[11,"return_expr","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"unit","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"result"}}],[11,"tuple","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprtuplebuilder"}}],[11,"struct_path","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"exprstructpathbuilder"}}],[11,"struct_id","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"t"}],"output":{"name":"exprstructpathbuilder"}}],[11,"struct_","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"pathbuilder"}}],[11,"self_","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"result"}}],[11,"none","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"result"}}],[11,"some","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"ok","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"err","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"phantom_data","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"result"}}],[11,"call","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"method_call","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"i"}],"output":{"name":"exprbuilder"}}],[11,"build_block","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"block","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"blockbuilder"}}],[11,"build_assign","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"assign","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build_assign_op","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"binopkind"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"assign_op","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"binopkind"}],"output":{"name":"exprbuilder"}}],[11,"add_assign","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"sub_assign","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"mul_assign","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"rem_assign","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"and_assign","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"or_assign","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"bit_xor_assign","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"bit_and_assign","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"bit_or_assign","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"bit_shl_assign","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"bit_shr_assign","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build_index","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"index","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build_repeat","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"repeat","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"loop_","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprloopbuilder"}}],[11,"if_","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"match_","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"paren","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"field","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"i"}],"output":{"name":"exprbuilder"}}],[11,"tup_field","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"usize"}],"output":{"name":"exprbuilder"}}],[11,"box_","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"rc","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"arc","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"default","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"result"}}],[11,"slice","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprslicebuilder"}}],[11,"vec","","",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprslicebuilder"}}],[11,"try","","Represents an equivalent to `try!(...)`.",9,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"invoke","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"invoke","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"invoke","","",9,null],[11,"invoke","","",9,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",10,{"inputs":[{"name":"exprunarybuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",11,{"inputs":[{"name":"exprbinarylhsbuilder"},{"name":"p"}],"output":{"name":"exprbuilder"}}],[11,"invoke","","",12,{"inputs":[{"name":"exprbinaryrhsbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",13,{"inputs":[{"name":"exprreturnbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"with_exprs","","",14,{"inputs":[{"name":"exprtuplebuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"expr","","",14,{"inputs":[{"name":"exprtuplebuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",14,{"inputs":[{"name":"exprtuplebuilder"}],"output":{"name":"result"}}],[11,"invoke","","",14,{"inputs":[{"name":"exprtuplebuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"invoke","","",15,{"inputs":[{"name":"exprstructbuilder"},{"name":"path"}],"output":{"name":"exprstructpathbuilder"}}],[11,"span","","",16,{"inputs":[{"name":"exprstructpathbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_fields","","",16,{"inputs":[{"name":"exprstructpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_id_exprs","","",16,{"inputs":[{"name":"exprstructpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"field","","",16,{"inputs":[{"name":"exprstructpathbuilder"},{"name":"i"}],"output":{"name":"exprbuilder"}}],[11,"build_with","","",16,{"inputs":[{"name":"exprstructpathbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",16,{"inputs":[{"name":"exprstructpathbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",16,{"inputs":[{"name":"exprstructpathbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",17,{"inputs":[{"name":"exprstructfieldbuilder"},{"name":"p"}],"output":{"name":"exprstructpathbuilder"}}],[11,"invoke","","",18,{"inputs":[{"name":"exprcallbuilder"},{"name":"p"}],"output":{"name":"exprcallargsbuilder"}}],[11,"with_args","","",19,{"inputs":[{"name":"exprcallargsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_arg","","",19,{"inputs":[{"name":"exprcallargsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"arg","","",19,{"inputs":[{"name":"exprcallargsbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",19,{"inputs":[{"name":"exprcallargsbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",19,{"inputs":[{"name":"exprcallargsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"invoke","","",20,{"inputs":[{"name":"exprmethodcallbuilder"},{"name":"p"}],"output":{"name":"exprmethodcallargsbuilder"}}],[11,"with_tys","","",21,{"inputs":[{"name":"exprmethodcallargsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_ty","","",21,{"inputs":[{"name":"exprmethodcallargsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"ty","","",21,{"inputs":[{"name":"exprmethodcallargsbuilder"}],"output":{"name":"tybuilder"}}],[11,"with_args","","",21,{"inputs":[{"name":"exprmethodcallargsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_arg","","",21,{"inputs":[{"name":"exprmethodcallargsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"arg","","",21,{"inputs":[{"name":"exprmethodcallargsbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",21,{"inputs":[{"name":"exprmethodcallargsbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",21,{"inputs":[{"name":"exprmethodcallargsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"invoke","","",21,{"inputs":[{"name":"exprmethodcallargsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"invoke","","",22,{"inputs":[{"name":"exprrefbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",23,{"inputs":[{"name":"exprpathbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",24,{"inputs":[{"name":"exprassignbuilder"},{"name":"p"}],"output":{"name":"exprbuilder"}}],[11,"invoke","","",25,{"inputs":[{"name":"exprassignlhsbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",26,{"inputs":[{"name":"exprassignopbuilder"},{"name":"p"}],"output":{"name":"exprbuilder"}}],[11,"invoke","","",27,{"inputs":[{"name":"exprassignoplhsbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",28,{"inputs":[{"name":"exprindexbuilder"},{"name":"p"}],"output":{"name":"exprbuilder"}}],[11,"invoke","","",29,{"inputs":[{"name":"exprindexlhsbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",30,{"inputs":[{"name":"exprrepeatbuilder"},{"name":"p"}],"output":{"name":"exprbuilder"}}],[11,"invoke","","",31,{"inputs":[{"name":"exprrepeatlhsbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"label","","",32,{"inputs":[{"name":"exprloopbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"block","","",32,{"inputs":[{"name":"exprloopbuilder"}],"output":{"name":"blockbuilder"}}],[11,"invoke","","",32,{"inputs":[{"name":"exprloopbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",33,{"inputs":[{"name":"exprifbuilder"},{"name":"p"}],"output":{"name":"exprifthenbuilder"}}],[11,"build_then","","",34,{"inputs":[{"name":"exprifthenbuilder"},{"name":"p"}],"output":{"name":"exprifthenelsebuilder"}}],[11,"then","","",34,{"inputs":[{"name":"exprifthenbuilder"}],"output":{"name":"blockbuilder"}}],[11,"invoke","","",34,{"inputs":[{"name":"exprifthenbuilder"},{"name":"p"}],"output":{"name":"exprifthenelsebuilder"}}],[11,"else_if","","",35,{"inputs":[{"name":"exprifthenelsebuilder"}],"output":{"name":"exprbuilder"}}],[11,"build_else","","",35,{"inputs":[{"name":"exprifthenelsebuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"else_","","",35,{"inputs":[{"name":"exprifthenelsebuilder"}],"output":{"name":"blockbuilder"}}],[11,"build","","",35,{"inputs":[{"name":"exprifthenelsebuilder"}],"output":{"name":"result"}}],[11,"invoke","","",35,{"inputs":[{"name":"exprifthenelsebuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",36,{"inputs":[{"name":"exprelseifbuilder"},{"name":"p"}],"output":{"name":"exprelseifthenbuilder"}}],[11,"build_then","","",37,{"inputs":[{"name":"exprelseifthenbuilder"},{"name":"p"}],"output":{"name":"exprifthenelsebuilder"}}],[11,"then","","",37,{"inputs":[{"name":"exprelseifthenbuilder"}],"output":{"name":"blockbuilder"}}],[11,"invoke","","",37,{"inputs":[{"name":"exprelseifthenbuilder"},{"name":"p"}],"output":{"name":"exprifthenelsebuilder"}}],[11,"invoke","","",38,{"inputs":[{"name":"exprmatchbuilder"},{"name":"p"}],"output":{"name":"exprmatcharmbuilder"}}],[11,"with_arms","","",39,{"inputs":[{"name":"exprmatcharmbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_arm","","",39,{"inputs":[{"name":"exprmatcharmbuilder"},{"name":"arm"}],"output":{"name":"self"}}],[11,"arm","","",39,{"inputs":[{"name":"exprmatcharmbuilder"}],"output":{"name":"armbuilder"}}],[11,"build","","",39,{"inputs":[{"name":"exprmatcharmbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",39,{"inputs":[{"name":"exprmatcharmbuilder"},{"name":"arm"}],"output":{"name":"self"}}],[11,"invoke","","",40,{"inputs":[{"name":"exprparenbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",41,{"inputs":[{"name":"exprfieldbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",42,{"inputs":[{"name":"exprtupfieldbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"with_exprs","","",43,{"inputs":[{"name":"exprslicebuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"expr","","",43,{"inputs":[{"name":"exprslicebuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",43,{"inputs":[{"name":"exprslicebuilder"}],"output":{"name":"result"}}],[11,"invoke","","",43,{"inputs":[{"name":"exprslicebuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"invoke","","",44,{"inputs":[{"name":"exprvecbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",45,{"inputs":[{"name":"exprtrybuilder"},{"name":"p"}],"output":{"name":"result"}}],[0,"fn_decl","aster","",null,null],[3,"FnDeclBuilder","aster::fn_decl","",null,null],[3,"ArgBuilder","","",null,null],[3,"ArgPatBuilder","","",null,null],[11,"new","","",46,{"inputs":[],"output":{"name":"fndeclbuilder"}}],[11,"with_callback","","",46,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",46,{"inputs":[{"name":"fndeclbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"variadic","","",46,{"inputs":[{"name":"fndeclbuilder"}],"output":{"name":"self"}}],[11,"with_arg","","",46,{"inputs":[{"name":"fndeclbuilder"},{"name":"arg"}],"output":{"name":"self"}}],[11,"with_args","","",46,{"inputs":[{"name":"fndeclbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"arg","","",46,{"inputs":[{"name":"fndeclbuilder"}],"output":{"name":"argbuilder"}}],[11,"arg_id","","",46,{"inputs":[{"name":"fndeclbuilder"},{"name":"t"}],"output":{"name":"argpatbuilder"}}],[11,"arg_ref_id","","",46,{"inputs":[{"name":"fndeclbuilder"},{"name":"t"}],"output":{"name":"argpatbuilder"}}],[11,"arg_mut_id","","",46,{"inputs":[{"name":"fndeclbuilder"},{"name":"t"}],"output":{"name":"argpatbuilder"}}],[11,"arg_ref_mut_id","","",46,{"inputs":[{"name":"fndeclbuilder"},{"name":"t"}],"output":{"name":"argpatbuilder"}}],[11,"no_return","","",46,{"inputs":[{"name":"fndeclbuilder"}],"output":{"name":"result"}}],[11,"default_return","","",46,{"inputs":[{"name":"fndeclbuilder"}],"output":{"name":"result"}}],[11,"build_return","","",46,{"inputs":[{"name":"fndeclbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"return_","","",46,{"inputs":[{"name":"fndeclbuilder"}],"output":{"name":"tybuilder"}}],[11,"build","","",46,{"inputs":[{"name":"fndeclbuilder"},{"name":"functionretty"}],"output":{"name":"result"}}],[11,"invoke","","",46,{"inputs":[{"name":"fndeclbuilder"},{"name":"arg"}],"output":{"name":"self"}}],[11,"invoke","","",46,{"inputs":[{"name":"fndeclbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","","",47,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",47,{"inputs":[{"name":"f"}],"output":{"name":"argbuilder"}}],[11,"span","","",47,{"inputs":[{"name":"argbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_pat","","",47,{"inputs":[{"name":"argbuilder"},{"name":"p"}],"output":{"name":"argpatbuilder"}}],[11,"pat","","",47,{"inputs":[{"name":"argbuilder"}],"output":{"name":"patbuilder"}}],[11,"id","","",47,{"inputs":[{"name":"argbuilder"},{"name":"t"}],"output":{"name":"argpatbuilder"}}],[11,"ref_id","","",47,{"inputs":[{"name":"argbuilder"},{"name":"t"}],"output":{"name":"argpatbuilder"}}],[11,"mut_id","","",47,{"inputs":[{"name":"argbuilder"},{"name":"t"}],"output":{"name":"argpatbuilder"}}],[11,"ref_mut_id","","",47,{"inputs":[{"name":"argbuilder"},{"name":"t"}],"output":{"name":"argpatbuilder"}}],[11,"invoke","","",47,{"inputs":[{"name":"argbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"with_ty","","",48,{"inputs":[{"name":"argpatbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"ty","","",48,{"inputs":[{"name":"argpatbuilder"}],"output":{"name":"tybuilder"}}],[11,"invoke","","",48,{"inputs":[{"name":"argpatbuilder"},{"name":"p"}],"output":{"name":"result"}}],[0,"generics","aster","",null,null],[3,"GenericsBuilder","aster::generics","",null,null],[11,"new","","",49,{"inputs":[],"output":{"name":"self"}}],[11,"from_generics","","",49,{"inputs":[{"name":"generics"}],"output":{"name":"self"}}],[11,"with_callback","","",49,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"from_generics_with_callback","","",49,{"inputs":[{"name":"generics"},{"name":"f"}],"output":{"name":"self"}}],[11,"with","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"span","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_lifetimes","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_lifetime_names","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_lifetime","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"lifetimedef"}],"output":{"name":"self"}}],[11,"lifetime_name","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"n"}],"output":{"name":"self"}}],[11,"lifetime","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"n"}],"output":{"name":"lifetimedefbuilder"}}],[11,"with_ty_params","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_ty_param_ids","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_ty_param","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"typaram"}],"output":{"name":"self"}}],[11,"ty_param_id","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"ty_param","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"typarambuilder"}}],[11,"with_predicates","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_predicate","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"wherepredicate"}],"output":{"name":"self"}}],[11,"predicate","","",49,{"inputs":[{"name":"genericsbuilder"}],"output":{"name":"wherepredicatebuilder"}}],[11,"add_lifetime_bound","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"l"}],"output":{"name":"self"}}],[11,"add_ty_param_bound","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"strip_bounds","","",49,{"inputs":[{"name":"genericsbuilder"}],"output":{"name":"self"}}],[11,"strip_lifetimes","","",49,{"inputs":[{"name":"genericsbuilder"}],"output":{"name":"self"}}],[11,"strip_ty_params","","",49,{"inputs":[{"name":"genericsbuilder"}],"output":{"name":"self"}}],[11,"strip_predicates","","",49,{"inputs":[{"name":"genericsbuilder"}],"output":{"name":"self"}}],[11,"build","","",49,{"inputs":[{"name":"genericsbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"lifetimedef"}],"output":{"name":"self"}}],[11,"invoke","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"typaram"}],"output":{"name":"self"}}],[11,"invoke","","",49,{"inputs":[{"name":"genericsbuilder"},{"name":"wherepredicate"}],"output":{"name":"self"}}],[0,"ident","aster","",null,null],[8,"ToIdent","aster::ident","",null,null],[10,"to_ident","","",50,{"inputs":[{"name":"toident"}],"output":{"name":"ident"}}],[11,"to_ident","syntax::ast","",51,{"inputs":[{"name":"ident"}],"output":{"name":"ident"}}],[11,"to_ident","","",52,{"inputs":[{"name":"name"}],"output":{"name":"ident"}}],[11,"to_ident","collections::string","",53,{"inputs":[{"name":"string"}],"output":{"name":"ident"}}],[0,"invoke","aster","",null,null],[3,"Identity","aster::invoke","",null,null],[8,"Invoke","","",null,null],[16,"Result","","",54,null],[10,"invoke","","",54,{"inputs":[{"name":"invoke"},{"name":"a"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"identity"}],"output":{"name":"identity"}}],[11,"invoke","","",55,{"inputs":[{"name":"identity"},{"name":"a"}],"output":{"name":"a"}}],[0,"item","aster","",null,null],[3,"ItemBuilder","aster::item","",null,null],[3,"ItemFnDeclBuilder","","",null,null],[3,"ItemFnBuilder","","",null,null],[3,"ItemUseBuilder","","",null,null],[3,"ItemUsePathBuilder","","",null,null],[3,"ItemUsePathListBuilder","","",null,null],[3,"ItemStructBuilder","","",null,null],[3,"ItemTupleStructBuilder","","",null,null],[3,"ItemEnumBuilder","","",null,null],[3,"ItemExternCrateBuilder","","A builder for extern crate items",null,null],[3,"ItemMacBuilder","","A builder for macro invocation items.",null,null],[3,"ItemTyBuilder","","",null,null],[3,"ItemTraitBuilder","","",null,null],[3,"ItemTraitItemBuilder","","",null,null],[3,"ItemTraitMethodBuilder","","",null,null],[3,"ItemTraitTypeBuilder","","",null,null],[3,"ItemImplBuilder","","",null,null],[3,"ItemImplItemBuilder","","",null,null],[3,"ItemImplMethodBuilder","","",null,null],[3,"ItemConstBuilder","","",null,null],[11,"new","","",56,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",56,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"build","","",56,{"inputs":[{"name":"itembuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"span","","",56,{"inputs":[{"name":"itembuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_attrs","","",56,{"inputs":[{"name":"itembuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_attr","","",56,{"inputs":[{"name":"itembuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"attr","","",56,{"inputs":[{"name":"itembuilder"}],"output":{"name":"attrbuilder"}}],[11,"pub_","","",56,{"inputs":[{"name":"itembuilder"}],"output":{"name":"self"}}],[11,"build_item_kind","","",56,{"inputs":[{"name":"itembuilder"},{"name":"t"},{"name":"itemkind"}],"output":{"name":"result"}}],[11,"fn_","","",56,{"inputs":[{"name":"itembuilder"},{"name":"t"}],"output":{"name":"fndeclbuilder"}}],[11,"build_use","","",56,{"inputs":[{"name":"itembuilder"},{"name":"viewpath_"}],"output":{"name":"result"}}],[11,"use_","","",56,{"inputs":[{"name":"itembuilder"}],"output":{"name":"pathbuilder"}}],[11,"struct_","","",56,{"inputs":[{"name":"itembuilder"},{"name":"t"}],"output":{"name":"itemstructbuilder"}}],[11,"unit_struct","","",56,{"inputs":[{"name":"itembuilder"},{"name":"t"}],"output":{"name":"result"}}],[11,"tuple_struct","","",56,{"inputs":[{"name":"itembuilder"},{"name":"t"}],"output":{"name":"itemtuplestructbuilder"}}],[11,"enum_","","",56,{"inputs":[{"name":"itembuilder"},{"name":"t"}],"output":{"name":"itemenumbuilder"}}],[11,"extern_crate","","",56,{"inputs":[{"name":"itembuilder"},{"name":"t"}],"output":{"name":"itemexterncratebuilder"}}],[11,"mac","","",56,{"inputs":[{"name":"itembuilder"}],"output":{"name":"itemmacbuilder"}}],[11,"type_","","",56,{"inputs":[{"name":"itembuilder"},{"name":"t"}],"output":{"name":"itemtybuilder"}}],[11,"trait_","","",56,{"inputs":[{"name":"itembuilder"},{"name":"t"}],"output":{"name":"itemtraitbuilder"}}],[11,"impl_","","",56,{"inputs":[{"name":"itembuilder"}],"output":{"name":"itemimplbuilder"}}],[11,"const_","","",56,{"inputs":[{"name":"itembuilder"},{"name":"t"}],"output":{"name":"constbuilder"}}],[11,"invoke","","",56,{"inputs":[{"name":"itembuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"invoke","","",57,{"inputs":[{"name":"itemfndeclbuilder"},{"name":"p"}],"output":{"name":"itemfnbuilder"}}],[11,"unsafe_","","",58,{"inputs":[{"name":"itemfnbuilder"}],"output":{"name":"self"}}],[11,"const_","","",58,{"inputs":[{"name":"itemfnbuilder"}],"output":{"name":"self"}}],[11,"abi","","",58,{"inputs":[{"name":"itemfnbuilder"},{"name":"abi"}],"output":{"name":"self"}}],[11,"generics","","",58,{"inputs":[{"name":"itemfnbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"build","","",58,{"inputs":[{"name":"itemfnbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"block","","",58,{"inputs":[{"name":"itemfnbuilder"}],"output":{"name":"blockbuilder"}}],[11,"invoke","","",58,{"inputs":[{"name":"itemfnbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"invoke","","",58,{"inputs":[{"name":"itemfnbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",59,{"inputs":[{"name":"itemusebuilder"},{"name":"path"}],"output":{"name":"itemusepathbuilder"}}],[11,"as_","","",60,{"inputs":[{"name":"itemusepathbuilder"},{"name":"t"}],"output":{"name":"result"}}],[11,"build","","",60,{"inputs":[{"name":"itemusepathbuilder"}],"output":{"name":"result"}}],[11,"glob","","",60,{"inputs":[{"name":"itemusepathbuilder"}],"output":{"name":"result"}}],[11,"list","","",60,{"inputs":[{"name":"itemusepathbuilder"}],"output":{"name":"itemusepathlistbuilder"}}],[11,"span","","",61,{"inputs":[{"name":"itemusepathlistbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"self_","","",61,{"inputs":[{"name":"itemusepathlistbuilder"}],"output":{"name":"self"}}],[11,"id","","",61,{"inputs":[{"name":"itemusepathlistbuilder"},{"name":"t"}],"output":{"name":"self"}}],[11,"build","","",61,{"inputs":[{"name":"itemusepathlistbuilder"}],"output":{"name":"result"}}],[11,"with_generics","","",62,{"inputs":[{"name":"itemstructbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"generics","","",62,{"inputs":[{"name":"itemstructbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"with_fields","","",62,{"inputs":[{"name":"itemstructbuilder"},{"name":"i"}],"output":{"name":"variantdatastructbuilder"}}],[11,"with_field","","",62,{"inputs":[{"name":"itemstructbuilder"},{"name":"structfield"}],"output":{"name":"variantdatastructbuilder"}}],[11,"field","","",62,{"inputs":[{"name":"itemstructbuilder"},{"name":"t"}],"output":{"name":"structfieldbuilder"}}],[11,"build","","",62,{"inputs":[{"name":"itemstructbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",62,{"inputs":[{"name":"itemstructbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"invoke","","",62,{"inputs":[{"name":"itemstructbuilder"},{"name":"variantdata"}],"output":{"name":"result"}}],[11,"generics","","",63,{"inputs":[{"name":"itemtuplestructbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"with_tys","","",63,{"inputs":[{"name":"itemtuplestructbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"ty","","",63,{"inputs":[{"name":"itemtuplestructbuilder"}],"output":{"name":"tybuilder"}}],[11,"field","","",63,{"inputs":[{"name":"itemtuplestructbuilder"}],"output":{"name":"structfieldbuilder"}}],[11,"build","","",63,{"inputs":[{"name":"itemtuplestructbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",63,{"inputs":[{"name":"itemtuplestructbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"invoke","","",63,{"inputs":[{"name":"itemtuplestructbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"invoke","","",63,{"inputs":[{"name":"itemtuplestructbuilder"},{"name":"structfield"}],"output":{"name":"self"}}],[11,"generics","","",64,{"inputs":[{"name":"itemenumbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"with_variants","","",64,{"inputs":[{"name":"itemenumbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_variant","","",64,{"inputs":[{"name":"itemenumbuilder"},{"name":"variant"}],"output":{"name":"self"}}],[11,"with_variant_","","",64,{"inputs":[{"name":"itemenumbuilder"},{"name":"variant_"}],"output":{"name":"self"}}],[11,"ids","","",64,{"inputs":[{"name":"itemenumbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"id","","",64,{"inputs":[{"name":"itemenumbuilder"},{"name":"t"}],"output":{"name":"self"}}],[11,"tuple","","",64,{"inputs":[{"name":"itemenumbuilder"},{"name":"t"}],"output":{"name":"structfieldbuilder"}}],[11,"struct_","","",64,{"inputs":[{"name":"itemenumbuilder"},{"name":"t"}],"output":{"name":"variantdatastructbuilder"}}],[11,"variant","","",64,{"inputs":[{"name":"itemenumbuilder"},{"name":"t"}],"output":{"name":"variantbuilder"}}],[11,"build","","",64,{"inputs":[{"name":"itemenumbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",64,{"inputs":[{"name":"itemenumbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"invoke","","",64,{"inputs":[{"name":"itemenumbuilder"},{"name":"variant"}],"output":{"name":"self"}}],[11,"with_name","","",65,{"inputs":[{"name":"itemexterncratebuilder"},{"name":"name"}],"output":{"name":"result"}}],[11,"build","","",65,{"inputs":[{"name":"itemexterncratebuilder"}],"output":{"name":"result"}}],[11,"path","","",66,{"inputs":[{"name":"itemmacbuilder"}],"output":{"name":"pathbuilder"}}],[11,"build","","",66,{"inputs":[{"name":"itemmacbuilder"},{"name":"mac"}],"output":{"name":"result"}}],[11,"invoke","","",66,{"inputs":[{"name":"itemmacbuilder"},{"name":"path"}],"output":{"name":"macbuilder"}}],[11,"invoke","","",66,{"inputs":[{"name":"itemmacbuilder"},{"name":"mac"}],"output":{"name":"result"}}],[11,"generics","","",67,{"inputs":[{"name":"itemtybuilder"}],"output":{"name":"genericsbuilder"}}],[11,"ty","","",67,{"inputs":[{"name":"itemtybuilder"}],"output":{"name":"tybuilder"}}],[11,"build_ty","","",67,{"inputs":[{"name":"itemtybuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",67,{"inputs":[{"name":"itemtybuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"invoke","","",67,{"inputs":[{"name":"itemtybuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"unsafe_","","",68,{"inputs":[{"name":"itemtraitbuilder"}],"output":{"name":"self"}}],[11,"with_generics","","",68,{"inputs":[{"name":"itemtraitbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"generics","","",68,{"inputs":[{"name":"itemtraitbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"with_bounds","","",68,{"inputs":[{"name":"itemtraitbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_bound","","",68,{"inputs":[{"name":"itemtraitbuilder"},{"name":"typarambound"}],"output":{"name":"self"}}],[11,"bound","","",68,{"inputs":[{"name":"itemtraitbuilder"}],"output":{"name":"typaramboundbuilder"}}],[11,"with_items","","",68,{"inputs":[{"name":"itemtraitbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_item","","",68,{"inputs":[{"name":"itemtraitbuilder"},{"name":"traititem"}],"output":{"name":"self"}}],[11,"item","","",68,{"inputs":[{"name":"itemtraitbuilder"},{"name":"t"}],"output":{"name":"itemtraititembuilder"}}],[11,"const_","","",68,{"inputs":[{"name":"itemtraitbuilder"},{"name":"t"}],"output":{"name":"constbuilder"}}],[11,"method","","",68,{"inputs":[{"name":"itemtraitbuilder"},{"name":"t"}],"output":{"name":"methodsigbuilder"}}],[11,"type_","","",68,{"inputs":[{"name":"itemtraitbuilder"},{"name":"t"}],"output":{"name":"itemtraittypebuilder"}}],[11,"build","","",68,{"inputs":[{"name":"itemtraitbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",68,{"inputs":[{"name":"itemtraitbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"invoke","","",68,{"inputs":[{"name":"itemtraitbuilder"},{"name":"typarambound"}],"output":{"name":"self"}}],[11,"invoke","","",68,{"inputs":[{"name":"itemtraitbuilder"},{"name":"traititem"}],"output":{"name":"self"}}],[11,"new","","",69,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"with_callback","","",69,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",69,{"inputs":[{"name":"itemtraititembuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_attrs","","",69,{"inputs":[{"name":"itemtraititembuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_attr","","",69,{"inputs":[{"name":"itemtraititembuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"attr","","",69,{"inputs":[{"name":"itemtraititembuilder"}],"output":{"name":"attrbuilder"}}],[11,"const_","","",69,{"inputs":[{"name":"itemtraititembuilder"}],"output":{"name":"constbuilder"}}],[11,"method","","",69,{"inputs":[{"name":"itemtraititembuilder"}],"output":{"name":"methodsigbuilder"}}],[11,"type_","","",69,{"inputs":[{"name":"itemtraititembuilder"}],"output":{"name":"itemtraittypebuilder"}}],[11,"build_item","","",69,{"inputs":[{"name":"itemtraititembuilder"},{"name":"traititemkind"}],"output":{"name":"result"}}],[11,"invoke","","",69,{"inputs":[{"name":"itemtraititembuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"invoke","","",69,{"inputs":[{"name":"itemtraititembuilder"},{"name":"const"}],"output":{"name":"result"}}],[11,"invoke","","",69,{"inputs":[{"name":"itemtraititembuilder"},{"name":"methodsig"}],"output":{"name":"result"}}],[11,"build_option_block","","",70,{"inputs":[{"name":"itemtraitmethodbuilder"},{"name":"option"}],"output":{"name":"result"}}],[11,"build_block","","",70,{"inputs":[{"name":"itemtraitmethodbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"build","","",70,{"inputs":[{"name":"itemtraitmethodbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",70,{"inputs":[{"name":"itemtraitmethodbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"with_bounds","","",71,{"inputs":[{"name":"itemtraittypebuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_bound","","",71,{"inputs":[{"name":"itemtraittypebuilder"},{"name":"typarambound"}],"output":{"name":"self"}}],[11,"bound","","",71,{"inputs":[{"name":"itemtraittypebuilder"}],"output":{"name":"typaramboundbuilder"}}],[11,"build_option_ty","","",71,{"inputs":[{"name":"itemtraittypebuilder"},{"name":"option"}],"output":{"name":"result"}}],[11,"build_ty","","",71,{"inputs":[{"name":"itemtraittypebuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"ty","","",71,{"inputs":[{"name":"itemtraittypebuilder"}],"output":{"name":"tybuilder"}}],[11,"build","","",71,{"inputs":[{"name":"itemtraittypebuilder"}],"output":{"name":"result"}}],[11,"invoke","","",71,{"inputs":[{"name":"itemtraittypebuilder"},{"name":"typarambound"}],"output":{"name":"result"}}],[11,"invoke","","",71,{"inputs":[{"name":"itemtraittypebuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"unsafe_","","",72,{"inputs":[{"name":"itemimplbuilder"}],"output":{"name":"self"}}],[11,"negative","","",72,{"inputs":[{"name":"itemimplbuilder"}],"output":{"name":"self"}}],[11,"with_generics","","",72,{"inputs":[{"name":"itemimplbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"generics","","",72,{"inputs":[{"name":"itemimplbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"with_trait","","",72,{"inputs":[{"name":"itemimplbuilder"},{"name":"traitref"}],"output":{"name":"self"}}],[11,"trait_","","",72,{"inputs":[{"name":"itemimplbuilder"}],"output":{"name":"pathbuilder"}}],[11,"ty","","",72,{"inputs":[{"name":"itemimplbuilder"}],"output":{"name":"tybuilder"}}],[11,"build_ty","","",72,{"inputs":[{"name":"itemimplbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"with_items","","",72,{"inputs":[{"name":"itemimplbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_item","","",72,{"inputs":[{"name":"itemimplbuilder"},{"name":"implitem"}],"output":{"name":"self"}}],[11,"item","","",72,{"inputs":[{"name":"itemimplbuilder"},{"name":"t"}],"output":{"name":"itemimplitembuilder"}}],[11,"const_","","",72,{"inputs":[{"name":"itemimplbuilder"},{"name":"t"}],"output":{"name":"constbuilder"}}],[11,"method","","",72,{"inputs":[{"name":"itemimplbuilder"},{"name":"t"}],"output":{"name":"methodsigbuilder"}}],[11,"type_","","",72,{"inputs":[{"name":"itemimplbuilder"},{"name":"t"}],"output":{"name":"tybuilder"}}],[11,"invoke","","",72,{"inputs":[{"name":"itemimplbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"invoke","","",72,{"inputs":[{"name":"itemimplbuilder"},{"name":"path"}],"output":{"name":"self"}}],[11,"invoke","","",72,{"inputs":[{"name":"itemimplbuilder"},{"name":"implitem"}],"output":{"name":"self"}}],[11,"invoke","","",72,{"inputs":[{"name":"itemimplbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","","",73,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"with_callback","","",73,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",73,{"inputs":[{"name":"itemimplitembuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_attrs","","",73,{"inputs":[{"name":"itemimplitembuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_attr","","",73,{"inputs":[{"name":"itemimplitembuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"attr","","",73,{"inputs":[{"name":"itemimplitembuilder"}],"output":{"name":"attrbuilder"}}],[11,"pub_","","",73,{"inputs":[{"name":"itemimplitembuilder"}],"output":{"name":"self"}}],[11,"const_","","",73,{"inputs":[{"name":"itemimplitembuilder"}],"output":{"name":"constbuilder"}}],[11,"build_method","","",73,{"inputs":[{"name":"itemimplitembuilder"},{"name":"methodsig"}],"output":{"name":"itemimplmethodbuilder"}}],[11,"method","","",73,{"inputs":[{"name":"itemimplitembuilder"}],"output":{"name":"methodsigbuilder"}}],[11,"type_","","",73,{"inputs":[{"name":"itemimplitembuilder"}],"output":{"name":"tybuilder"}}],[11,"mac","","",73,{"inputs":[{"name":"itemimplitembuilder"}],"output":{"name":"macbuilder"}}],[11,"build_item","","",73,{"inputs":[{"name":"itemimplitembuilder"},{"name":"implitemkind"}],"output":{"name":"result"}}],[11,"invoke","","",73,{"inputs":[{"name":"itemimplitembuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"invoke","","",73,{"inputs":[{"name":"itemimplitembuilder"},{"name":"const"}],"output":{"name":"result"}}],[11,"invoke","","",73,{"inputs":[{"name":"itemimplitembuilder"},{"name":"methodsig"}],"output":{"name":"result"}}],[11,"invoke","","",73,{"inputs":[{"name":"itemimplitembuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",73,{"inputs":[{"name":"itemimplitembuilder"},{"name":"mac"}],"output":{"name":"result"}}],[11,"build_block","","",74,{"inputs":[{"name":"itemimplmethodbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"block","","",74,{"inputs":[{"name":"itemimplmethodbuilder"}],"output":{"name":"blockbuilder"}}],[11,"invoke","","",74,{"inputs":[{"name":"itemimplmethodbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",75,{"inputs":[{"name":"itemconstbuilder"},{"name":"const"}],"output":{"name":"result"}}],[0,"lifetime","aster","",null,null],[3,"LifetimeDefBuilder","aster::lifetime","",null,null],[8,"IntoLifetime","","",null,null],[10,"into_lifetime","","",76,{"inputs":[{"name":"intolifetime"}],"output":{"name":"lifetime"}}],[8,"IntoLifetimeDef","","",null,null],[10,"into_lifetime_def","","",77,{"inputs":[{"name":"intolifetimedef"}],"output":{"name":"lifetimedef"}}],[11,"into_lifetime","syntax::ast","",78,{"inputs":[{"name":"lifetime"}],"output":{"name":"lifetime"}}],[11,"into_lifetime_def","","",79,{"inputs":[{"name":"lifetimedef"}],"output":{"name":"lifetimedef"}}],[11,"into_lifetime_def","","",78,{"inputs":[{"name":"lifetime"}],"output":{"name":"lifetimedef"}}],[11,"into_lifetime_def","collections::string","",53,{"inputs":[{"name":"string"}],"output":{"name":"lifetimedef"}}],[11,"new","aster::lifetime","",80,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"with_callback","","",80,{"inputs":[{"name":"n"},{"name":"f"}],"output":{"name":"self"}}],[11,"bound","","",80,{"inputs":[{"name":"lifetimedefbuilder"},{"name":"n"}],"output":{"name":"self"}}],[11,"build","","",80,{"inputs":[{"name":"lifetimedefbuilder"}],"output":{"name":"result"}}],[0,"lit","aster","",null,null],[3,"LitBuilder","aster::lit","",null,null],[11,"new","","",81,{"inputs":[],"output":{"name":"litbuilder"}}],[11,"with_callback","","",81,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",81,{"inputs":[{"name":"litbuilder"},{"name":"span"}],"output":{"name":"litbuilder"}}],[11,"build_lit","","",81,{"inputs":[{"name":"litbuilder"},{"name":"litkind"}],"output":{"name":"result"}}],[11,"bool","","",81,{"inputs":[{"name":"litbuilder"},{"name":"bool"}],"output":{"name":"result"}}],[11,"true_","","",81,{"inputs":[{"name":"litbuilder"}],"output":{"name":"result"}}],[11,"false_","","",81,{"inputs":[{"name":"litbuilder"}],"output":{"name":"result"}}],[11,"int","","",81,{"inputs":[{"name":"litbuilder"},{"name":"i64"}],"output":{"name":"result"}}],[11,"isize","","",81,{"inputs":[{"name":"litbuilder"},{"name":"isize"}],"output":{"name":"result"}}],[11,"i8","","",81,{"inputs":[{"name":"litbuilder"},{"name":"i8"}],"output":{"name":"result"}}],[11,"i16","","",81,{"inputs":[{"name":"litbuilder"},{"name":"i16"}],"output":{"name":"result"}}],[11,"i32","","",81,{"inputs":[{"name":"litbuilder"},{"name":"i32"}],"output":{"name":"result"}}],[11,"i64","","",81,{"inputs":[{"name":"litbuilder"},{"name":"i64"}],"output":{"name":"result"}}],[11,"uint","","",81,{"inputs":[{"name":"litbuilder"},{"name":"u64"}],"output":{"name":"result"}}],[11,"usize","","",81,{"inputs":[{"name":"litbuilder"},{"name":"usize"}],"output":{"name":"result"}}],[11,"u8","","",81,{"inputs":[{"name":"litbuilder"},{"name":"u8"}],"output":{"name":"result"}}],[11,"u16","","",81,{"inputs":[{"name":"litbuilder"},{"name":"u16"}],"output":{"name":"result"}}],[11,"u32","","",81,{"inputs":[{"name":"litbuilder"},{"name":"u32"}],"output":{"name":"result"}}],[11,"u64","","",81,{"inputs":[{"name":"litbuilder"},{"name":"u64"}],"output":{"name":"result"}}],[11,"f32","","",81,{"inputs":[{"name":"litbuilder"},{"name":"s"}],"output":{"name":"result"}}],[11,"f64","","",81,{"inputs":[{"name":"litbuilder"},{"name":"s"}],"output":{"name":"result"}}],[11,"char","","",81,{"inputs":[{"name":"litbuilder"},{"name":"char"}],"output":{"name":"result"}}],[11,"byte","","",81,{"inputs":[{"name":"litbuilder"},{"name":"u8"}],"output":{"name":"result"}}],[11,"str","","",81,{"inputs":[{"name":"litbuilder"},{"name":"s"}],"output":{"name":"result"}}],[11,"byte_str","","",81,{"inputs":[{"name":"litbuilder"},{"name":"t"}],"output":{"name":"result"}}],[0,"mac","aster","",null,null],[3,"MacBuilder","aster::mac","A Builder for macro invocations.",null,null],[11,"new","","",82,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",82,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",82,{"inputs":[{"name":"macbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"path","","",82,{"inputs":[{"name":"macbuilder"},{"name":"path"}],"output":{"name":"self"}}],[11,"build","","",82,{"inputs":[{"name":"macbuilder"}],"output":{"name":"result"}}],[11,"with_args","","",82,{"inputs":[{"name":"macbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_arg","","",82,{"inputs":[{"name":"macbuilder"},{"name":"t"}],"output":{"name":"self"}}],[11,"expr","","",82,{"inputs":[{"name":"macbuilder"}],"output":{"name":"exprbuilder"}}],[11,"invoke","","",82,{"inputs":[{"name":"macbuilder"},{"name":"p"}],"output":{"name":"self"}}],[0,"method","aster","",null,null],[3,"MethodSigBuilder","aster::method","",null,null],[3,"SelfBuilder","","",null,null],[11,"new","","",83,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",83,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",83,{"inputs":[{"name":"methodsigbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"unsafe_","","",83,{"inputs":[{"name":"methodsigbuilder"}],"output":{"name":"self"}}],[11,"const_","","",83,{"inputs":[{"name":"methodsigbuilder"}],"output":{"name":"self"}}],[11,"abi","","",83,{"inputs":[{"name":"methodsigbuilder"},{"name":"abi"}],"output":{"name":"self"}}],[11,"with_generics","","",83,{"inputs":[{"name":"methodsigbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"generics","","",83,{"inputs":[{"name":"methodsigbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"with_self","","",83,{"inputs":[{"name":"methodsigbuilder"},{"name":"mutability"},{"name":"explicitself"}],"output":{"name":"self"}}],[11,"self_","","",83,{"inputs":[{"name":"methodsigbuilder"}],"output":{"name":"selfbuilder"}}],[11,"build_fn_decl","","",83,{"inputs":[{"name":"methodsigbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"fn_decl","","",83,{"inputs":[{"name":"methodsigbuilder"}],"output":{"name":"fndeclbuilder"}}],[11,"invoke","","",83,{"inputs":[{"name":"methodsigbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"invoke","","",83,null],[11,"invoke","","",83,{"inputs":[{"name":"methodsigbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","","",84,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",84,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"build","","",84,{"inputs":[{"name":"selfbuilder"},{"name":"explicitself"}],"output":{"name":"result"}}],[11,"span","","",84,{"inputs":[{"name":"selfbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"build_self_kind","","",84,{"inputs":[{"name":"selfbuilder"},{"name":"selfkind"}],"output":{"name":"result"}}],[11,"mut_","","",84,{"inputs":[{"name":"selfbuilder"}],"output":{"name":"self"}}],[11,"static_","","",84,{"inputs":[{"name":"selfbuilder"}],"output":{"name":"result"}}],[11,"mut_static","","",84,{"inputs":[{"name":"selfbuilder"}],"output":{"name":"result"}}],[11,"value","","",84,{"inputs":[{"name":"selfbuilder"}],"output":{"name":"result"}}],[11,"ref_","","",84,{"inputs":[{"name":"selfbuilder"}],"output":{"name":"result"}}],[11,"ref_lifetime","","",84,{"inputs":[{"name":"selfbuilder"},{"name":"l"}],"output":{"name":"result"}}],[11,"ref_mut","","",84,{"inputs":[{"name":"selfbuilder"}],"output":{"name":"result"}}],[11,"ref_mut_lifetime","","",84,{"inputs":[{"name":"selfbuilder"},{"name":"l"}],"output":{"name":"result"}}],[11,"ty","","",84,{"inputs":[{"name":"selfbuilder"}],"output":{"name":"tybuilder"}}],[11,"invoke","","",84,{"inputs":[{"name":"selfbuilder"},{"name":"p"}],"output":{"name":"result"}}],[0,"name","aster","",null,null],[8,"ToName","aster::name","",null,null],[10,"to_name","","",85,{"inputs":[{"name":"toname"}],"output":{"name":"name"}}],[11,"to_name","syntax::ast","",52,{"inputs":[{"name":"name"}],"output":{"name":"name"}}],[0,"pat","aster","",null,null],[3,"PatBuilder","aster::pat","",null,null],[3,"PatRangeBuilder","","",null,null],[3,"PatRangeExprBuilder","","",null,null],[3,"PatEnumBuilder","","",null,null],[3,"PatEnumPathBuilder","","",null,null],[3,"PatStructBuilder","","",null,null],[3,"PatStructPathBuilder","","",null,null],[3,"PatStructFieldBuilder","","",null,null],[3,"PatExprBuilder","","",null,null],[3,"PatTupleBuilder","","",null,null],[11,"new","","",86,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",86,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",86,{"inputs":[{"name":"patbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"build","","",86,{"inputs":[{"name":"patbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"build_pat_kind","","",86,{"inputs":[{"name":"patbuilder"},{"name":"patkind"}],"output":{"name":"result"}}],[11,"wild","","",86,{"inputs":[{"name":"patbuilder"}],"output":{"name":"result"}}],[11,"build_id","","",86,{"inputs":[{"name":"patbuilder"},{"name":"bindingmode"},{"name":"i"},{"name":"option"}],"output":{"name":"result"}}],[11,"id","","",86,{"inputs":[{"name":"patbuilder"},{"name":"i"}],"output":{"name":"result"}}],[11,"mut_id","","",86,{"inputs":[{"name":"patbuilder"},{"name":"i"}],"output":{"name":"result"}}],[11,"ref_id","","",86,{"inputs":[{"name":"patbuilder"},{"name":"i"}],"output":{"name":"result"}}],[11,"ref_mut_id","","",86,{"inputs":[{"name":"patbuilder"},{"name":"i"}],"output":{"name":"result"}}],[11,"enum_","","",86,{"inputs":[{"name":"patbuilder"}],"output":{"name":"pathbuilder"}}],[11,"struct_","","",86,{"inputs":[{"name":"patbuilder"}],"output":{"name":"pathbuilder"}}],[11,"expr","","",86,{"inputs":[{"name":"patbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build_path","","",86,{"inputs":[{"name":"patbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"build_qpath","","",86,{"inputs":[{"name":"patbuilder"},{"name":"qself"},{"name":"path"}],"output":{"name":"result"}}],[11,"path","","",86,{"inputs":[{"name":"patbuilder"}],"output":{"name":"pathbuilder"}}],[11,"qpath","","",86,{"inputs":[{"name":"patbuilder"}],"output":{"name":"qpathbuilder"}}],[11,"build_range","","",86,{"inputs":[{"name":"patbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[11,"range","","",86,{"inputs":[{"name":"patbuilder"}],"output":{"name":"exprbuilder"}}],[11,"tuple","","",86,{"inputs":[{"name":"patbuilder"}],"output":{"name":"pattuplebuilder"}}],[11,"invoke","","",86,{"inputs":[{"name":"patbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"invoke","","",86,null],[11,"invoke","","",87,{"inputs":[{"name":"patrangebuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",88,{"inputs":[{"name":"patrangeexprbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",89,{"inputs":[{"name":"patenumbuilder"},{"name":"path"}],"output":{"name":"patenumpathbuilder"}}],[11,"with_pats","","",90,{"inputs":[{"name":"patenumpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"pat","","",90,{"inputs":[{"name":"patenumpathbuilder"}],"output":{"name":"patbuilder"}}],[11,"with_ids","","",90,{"inputs":[{"name":"patenumpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"id","","",90,{"inputs":[{"name":"patenumpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"build","","",90,{"inputs":[{"name":"patenumpathbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",90,{"inputs":[{"name":"patenumpathbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"invoke","","",91,{"inputs":[{"name":"patstructbuilder"},{"name":"path"}],"output":{"name":"patstructpathbuilder"}}],[11,"with_field_pat","","",92,{"inputs":[{"name":"patstructpathbuilder"},{"name":"fieldpat"}],"output":{"name":"self"}}],[11,"with_pats","","",92,{"inputs":[{"name":"patstructpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"pat","","",92,{"inputs":[{"name":"patstructpathbuilder"},{"name":"i"}],"output":{"name":"patbuilder"}}],[11,"with_ids","","",92,{"inputs":[{"name":"patstructpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"mut_id","","",92,{"inputs":[{"name":"patstructpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"id","","",92,{"inputs":[{"name":"patstructpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"etc","","",92,{"inputs":[{"name":"patstructpathbuilder"}],"output":{"name":"result"}}],[11,"build","","",92,{"inputs":[{"name":"patstructpathbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",93,{"inputs":[{"name":"patstructfieldbuilder"},{"name":"p"}],"output":{"name":"patstructpathbuilder"}}],[11,"invoke","","",94,{"inputs":[{"name":"patexprbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"with_pats","","",95,{"inputs":[{"name":"pattuplebuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_pat","","",95,{"inputs":[{"name":"pattuplebuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"pat","","",95,{"inputs":[{"name":"pattuplebuilder"}],"output":{"name":"patbuilder"}}],[11,"build","","",95,{"inputs":[{"name":"pattuplebuilder"}],"output":{"name":"result"}}],[11,"invoke","","",95,{"inputs":[{"name":"pattuplebuilder"},{"name":"p"}],"output":{"name":"self"}}],[0,"path","aster","",null,null],[3,"PathBuilder","aster::path","",null,null],[3,"PathSegmentsBuilder","","",null,null],[3,"PathSegmentBuilder","","",null,null],[3,"TypeBindingBuilder","","",null,null],[8,"IntoPath","","",null,null],[10,"into_path","","",96,{"inputs":[{"name":"intopath"}],"output":{"name":"path"}}],[11,"into_path","syntax::ast","",97,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"into_path","","",51,{"inputs":[{"name":"ident"}],"output":{"name":"path"}}],[11,"into_path","collections::string","",53,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"new","aster::path","",98,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",98,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"build","","",98,{"inputs":[{"name":"pathbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"span","","Update the span to start from this location.",98,{"inputs":[{"name":"pathbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"global","","",98,{"inputs":[{"name":"pathbuilder"}],"output":{"name":"self"}}],[11,"ids","","",98,{"inputs":[{"name":"pathbuilder"},{"name":"i"}],"output":{"name":"pathsegmentsbuilder"}}],[11,"id","","",98,{"inputs":[{"name":"pathbuilder"},{"name":"i"}],"output":{"name":"pathsegmentsbuilder"}}],[11,"segment","","",98,{"inputs":[{"name":"pathbuilder"},{"name":"i"}],"output":{"name":"pathsegmentbuilder"}}],[11,"ids","","",99,{"inputs":[{"name":"pathsegmentsbuilder"},{"name":"i"}],"output":{"name":"pathsegmentsbuilder"}}],[11,"id","","",99,{"inputs":[{"name":"pathsegmentsbuilder"},{"name":"t"}],"output":{"name":"pathsegmentsbuilder"}}],[11,"segment","","",99,{"inputs":[{"name":"pathsegmentsbuilder"},{"name":"t"}],"output":{"name":"pathsegmentbuilder"}}],[11,"build","","",99,{"inputs":[{"name":"pathsegmentsbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",99,{"inputs":[{"name":"pathsegmentsbuilder"},{"name":"pathsegment"}],"output":{"name":"self"}}],[11,"with_callback","","",100,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",100,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_generics","","",100,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"with_lifetimes","","",100,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_lifetime","","",100,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"l"}],"output":{"name":"self"}}],[11,"lifetime","","",100,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"n"}],"output":{"name":"self"}}],[11,"with_tys","","",100,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_ty","","",100,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"ty","","",100,{"inputs":[{"name":"pathsegmentbuilder"}],"output":{"name":"tybuilder"}}],[11,"with_binding","","",100,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"typebinding"}],"output":{"name":"self"}}],[11,"binding","","",100,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"t"}],"output":{"name":"tybuilder"}}],[11,"build","","",100,{"inputs":[{"name":"pathsegmentbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",100,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"invoke","","",101,{"inputs":[{"name":"typebindingbuilder"},{"name":"p"}],"output":{"name":"result"}}],[0,"qpath","aster","",null,null],[3,"QPathBuilder","aster::qpath","",null,null],[3,"QPathTyBuilder","","",null,null],[3,"QPathQSelfBuilder","","",null,null],[11,"new","","",102,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","Construct a `QPathBuilder` that will call the `callback` with a constructed `ast::QSelf`\nand `ast::Path`.",102,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","Update the span to start from this location.",102,{"inputs":[{"name":"qpathbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_ty","","Build a qualified path first by starting with a type builder.",102,{"inputs":[{"name":"qpathbuilder"},{"name":"p"}],"output":{"name":"qpathtybuilder"}}],[11,"ty","","Build a qualified path first by starting with a type builder.",102,{"inputs":[{"name":"qpathbuilder"}],"output":{"name":"tybuilder"}}],[11,"build","","Build a qualified path with a concrete type and path.",102,{"inputs":[{"name":"qpathbuilder"},{"name":"qself"},{"name":"path"}],"output":{"name":"result"}}],[11,"invoke","","",102,{"inputs":[{"name":"qpathbuilder"},{"name":"p"}],"output":{"name":"qpathtybuilder"}}],[11,"as_","","Build a qualified path with a path builder.",103,{"inputs":[{"name":"qpathtybuilder"}],"output":{"name":"pathbuilder"}}],[11,"id","","",103,{"inputs":[{"name":"qpathtybuilder"},{"name":"t"}],"output":{"name":"result"}}],[11,"segment","","",103,{"inputs":[{"name":"qpathtybuilder"},{"name":"t"}],"output":{"name":"pathsegmentbuilder"}}],[11,"invoke","","",103,{"inputs":[{"name":"qpathtybuilder"},{"name":"path"}],"output":{"name":"qpathqselfbuilder"}}],[11,"id","","",104,{"inputs":[{"name":"qpathqselfbuilder"},{"name":"t"}],"output":{"name":"result"}}],[11,"segment","","",104,{"inputs":[{"name":"qpathqselfbuilder"},{"name":"t"}],"output":{"name":"pathsegmentbuilder"}}],[11,"invoke","","",104,{"inputs":[{"name":"qpathqselfbuilder"},{"name":"pathsegment"}],"output":{"name":"result"}}],[0,"stmt","aster","",null,null],[3,"StmtBuilder","aster::stmt","",null,null],[3,"StmtLetIdBuilder","","",null,null],[3,"StmtExprBuilder","","",null,null],[3,"StmtSemiBuilder","","",null,null],[3,"StmtLetBuilder","","",null,null],[3,"StmtLetTyBuilder","","",null,null],[3,"StmtItemBuilder","","",null,null],[11,"new","","",105,{"inputs":[],"output":{"name":"stmtbuilder"}}],[11,"with_callback","","",105,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"build","","",105,{"inputs":[{"name":"stmtbuilder"},{"name":"stmt"}],"output":{"name":"result"}}],[11,"span","","",105,{"inputs":[{"name":"stmtbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"build_stmt_kind","","",105,{"inputs":[{"name":"stmtbuilder"},{"name":"stmtkind"}],"output":{"name":"result"}}],[11,"build_let","","",105,{"inputs":[{"name":"stmtbuilder"},{"name":"p"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"let_","","",105,{"inputs":[{"name":"stmtbuilder"}],"output":{"name":"patbuilder"}}],[11,"let_id","","",105,{"inputs":[{"name":"stmtbuilder"},{"name":"i"}],"output":{"name":"exprbuilder"}}],[11,"build_expr","","",105,{"inputs":[{"name":"stmtbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"expr","","",105,{"inputs":[{"name":"stmtbuilder"}],"output":{"name":"exprbuilder"}}],[11,"semi","","",105,{"inputs":[{"name":"stmtbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build_item","","",105,{"inputs":[{"name":"stmtbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"item","","",105,{"inputs":[{"name":"stmtbuilder"}],"output":{"name":"itembuilder"}}],[11,"invoke","","",105,{"inputs":[{"name":"stmtbuilder"},{"name":"p"}],"output":{"name":"stmtletbuilder"}}],[11,"invoke","","",106,{"inputs":[{"name":"stmtletidbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",107,{"inputs":[{"name":"stmtexprbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",108,{"inputs":[{"name":"stmtsemibuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"ty","","",109,{"inputs":[{"name":"stmtletbuilder"}],"output":{"name":"tybuilder"}}],[11,"build_expr","","",109,{"inputs":[{"name":"stmtletbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"expr","","",109,{"inputs":[{"name":"stmtletbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",109,{"inputs":[{"name":"stmtletbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",109,{"inputs":[{"name":"stmtletbuilder"},{"name":"p"}],"output":{"name":"stmtlettybuilder"}}],[11,"invoke","","",109,{"inputs":[{"name":"stmtletbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"expr","","",110,{"inputs":[{"name":"stmtlettybuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",110,{"inputs":[{"name":"stmtlettybuilder"}],"output":{"name":"result"}}],[11,"invoke","","",110,{"inputs":[{"name":"stmtlettybuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",111,{"inputs":[{"name":"stmtitembuilder"},{"name":"p"}],"output":{"name":"result"}}],[0,"str","aster","",null,null],[8,"ToInternedString","aster::str","",null,null],[10,"to_interned_string","","",112,{"inputs":[{"name":"tointernedstring"}],"output":{"name":"internedstring"}}],[11,"to_interned_string","syntax::parse::token","",113,{"inputs":[{"name":"internedstring"}],"output":{"name":"internedstring"}}],[11,"to_interned_string","syntax::ast","",51,{"inputs":[{"name":"ident"}],"output":{"name":"internedstring"}}],[11,"to_interned_string","","",52,{"inputs":[{"name":"name"}],"output":{"name":"internedstring"}}],[0,"struct_field","aster","",null,null],[3,"StructFieldBuilder","aster::struct_field","",null,null],[11,"named","","",114,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"unnamed","","",114,{"inputs":[],"output":{"name":"self"}}],[11,"named_with_callback","","",114,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"self"}}],[11,"unnamed_with_callback","","",114,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",114,{"inputs":[{"name":"structfieldbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"pub_","","",114,{"inputs":[{"name":"structfieldbuilder"}],"output":{"name":"self"}}],[11,"with_attrs","","",114,{"inputs":[{"name":"structfieldbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"attr","","",114,{"inputs":[{"name":"structfieldbuilder"}],"output":{"name":"attrbuilder"}}],[11,"build_ty","","",114,{"inputs":[{"name":"structfieldbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"ty","","",114,{"inputs":[{"name":"structfieldbuilder"}],"output":{"name":"tybuilder"}}],[11,"invoke","","",114,{"inputs":[{"name":"structfieldbuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"invoke","","",114,{"inputs":[{"name":"structfieldbuilder"},{"name":"p"}],"output":{"name":"result"}}],[0,"ty","aster","",null,null],[3,"TyBuilder","aster::ty","",null,null],[3,"TyPathBuilder","","",null,null],[3,"TyQPathBuilder","","",null,null],[3,"TySliceBuilder","","",null,null],[3,"TyRefBuilder","","",null,null],[3,"TyOptionBuilder","","",null,null],[3,"TyResultOkBuilder","","",null,null],[3,"TyResultErrBuilder","","",null,null],[3,"TyPhantomDataBuilder","","",null,null],[3,"TyBoxBuilder","","",null,null],[3,"TyIteratorBuilder","","",null,null],[3,"TyObjectSumBuilder","","",null,null],[3,"TyObjectSumTyBuilder","","",null,null],[3,"TyTupleBuilder","","",null,null],[11,"new","","",115,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",115,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"build","","",115,{"inputs":[{"name":"tybuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"span","","",115,{"inputs":[{"name":"tybuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"build_ty_kind","","",115,{"inputs":[{"name":"tybuilder"},{"name":"tykind"}],"output":{"name":"result"}}],[11,"id","","",115,{"inputs":[{"name":"tybuilder"},{"name":"i"}],"output":{"name":"result"}}],[11,"build_path","","",115,{"inputs":[{"name":"tybuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"build_qpath","","",115,{"inputs":[{"name":"tybuilder"},{"name":"qself"},{"name":"path"}],"output":{"name":"result"}}],[11,"path","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"pathbuilder"}}],[11,"qpath","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"qpathbuilder"}}],[11,"isize","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"i8","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"i16","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"i32","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"i64","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"usize","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"u8","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"u16","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"u32","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"u64","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"f32","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"f64","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"bool","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"unit","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"tuple","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tytuplebuilder"}}],[11,"build_slice","","",115,{"inputs":[{"name":"tybuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"slice","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tybuilder"}}],[11,"ref_","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tyrefbuilder"}}],[11,"infer","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"result"}}],[11,"option","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tybuilder"}}],[11,"result","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tybuilder"}}],[11,"phantom_data","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tybuilder"}}],[11,"box_","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tybuilder"}}],[11,"iterator","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tybuilder"}}],[11,"object_sum","","",115,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tybuilder"}}],[11,"invoke","","",116,{"inputs":[{"name":"typathbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"invoke","","",117,null],[11,"invoke","","",118,{"inputs":[{"name":"tyslicebuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"mut_","","",119,{"inputs":[{"name":"tyrefbuilder"}],"output":{"name":"self"}}],[11,"lifetime","","",119,{"inputs":[{"name":"tyrefbuilder"},{"name":"n"}],"output":{"name":"self"}}],[11,"build_ty","","",119,{"inputs":[{"name":"tyrefbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"ty","","",119,{"inputs":[{"name":"tyrefbuilder"}],"output":{"name":"tybuilder"}}],[11,"invoke","","",119,{"inputs":[{"name":"tyrefbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",120,{"inputs":[{"name":"tyoptionbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",121,{"inputs":[{"name":"tyresultokbuilder"},{"name":"p"}],"output":{"name":"tybuilder"}}],[11,"invoke","","",122,{"inputs":[{"name":"tyresulterrbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",123,{"inputs":[{"name":"typhantomdatabuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",124,{"inputs":[{"name":"tyboxbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",125,{"inputs":[{"name":"tyiteratorbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",126,{"inputs":[{"name":"tyobjectsumbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"with_bounds","","",127,{"inputs":[{"name":"tyobjectsumtybuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_bound","","",127,{"inputs":[{"name":"tyobjectsumtybuilder"},{"name":"typarambound"}],"output":{"name":"self"}}],[11,"bound","","",127,{"inputs":[{"name":"tyobjectsumtybuilder"}],"output":{"name":"typaramboundbuilder"}}],[11,"with_generics","","",127,{"inputs":[{"name":"tyobjectsumtybuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"with_lifetimes","","",127,{"inputs":[{"name":"tyobjectsumtybuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"lifetime","","",127,{"inputs":[{"name":"tyobjectsumtybuilder"},{"name":"l"}],"output":{"name":"self"}}],[11,"build","","",127,{"inputs":[{"name":"tyobjectsumtybuilder"}],"output":{"name":"result"}}],[11,"invoke","","",127,{"inputs":[{"name":"tyobjectsumtybuilder"},{"name":"typarambound"}],"output":{"name":"self"}}],[11,"with_tys","","",128,{"inputs":[{"name":"tytuplebuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_ty","","",128,{"inputs":[{"name":"tytuplebuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"ty","","",128,{"inputs":[{"name":"tytuplebuilder"}],"output":{"name":"tybuilder"}}],[11,"build","","",128,{"inputs":[{"name":"tytuplebuilder"}],"output":{"name":"result"}}],[11,"invoke","","",128,{"inputs":[{"name":"tytuplebuilder"},{"name":"p"}],"output":{"name":"self"}}],[0,"ty_param","aster","",null,null],[3,"TyParamBuilder","aster::ty_param","",null,null],[3,"TyParamBoundBuilder","","",null,null],[3,"TraitTyParamBoundBuilder","","",null,null],[3,"PolyTraitRefBuilder","","",null,null],[11,"new","","",129,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"from_ty_param","","",129,{"inputs":[{"name":"typaram"}],"output":{"name":"self"}}],[11,"with_callback","","",129,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"from_ty_param_with_callback","","",129,{"inputs":[{"name":"f"},{"name":"typaram"}],"output":{"name":"self"}}],[11,"span","","",129,{"inputs":[{"name":"typarambuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_default","","",129,{"inputs":[{"name":"typarambuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"default","","",129,{"inputs":[{"name":"typarambuilder"}],"output":{"name":"tybuilder"}}],[11,"with_bound","","",129,{"inputs":[{"name":"typarambuilder"},{"name":"typarambound"}],"output":{"name":"self"}}],[11,"bound","","",129,{"inputs":[{"name":"typarambuilder"}],"output":{"name":"typaramboundbuilder"}}],[11,"with_trait_bound","","",129,{"inputs":[{"name":"typarambuilder"},{"name":"polytraitref"}],"output":{"name":"self"}}],[11,"trait_bound","","",129,{"inputs":[{"name":"typarambuilder"},{"name":"p"}],"output":{"name":"polytraitrefbuilder"}}],[11,"lifetime_bound","","",129,{"inputs":[{"name":"typarambuilder"},{"name":"l"}],"output":{"name":"self"}}],[11,"build","","",129,{"inputs":[{"name":"typarambuilder"}],"output":{"name":"result"}}],[11,"invoke","","",129,{"inputs":[{"name":"typarambuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"invoke","","",129,{"inputs":[{"name":"typarambuilder"},{"name":"typarambound"}],"output":{"name":"self"}}],[11,"invoke","","",129,{"inputs":[{"name":"typarambuilder"},{"name":"polytraitref"}],"output":{"name":"self"}}],[11,"new","","",130,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",130,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",130,{"inputs":[{"name":"typaramboundbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"build_trait","","",130,{"inputs":[{"name":"typaramboundbuilder"},{"name":"polytraitref"},{"name":"traitboundmodifier"}],"output":{"name":"result"}}],[11,"trait_","","",130,{"inputs":[{"name":"typaramboundbuilder"},{"name":"p"}],"output":{"name":"polytraitrefbuilder"}}],[11,"maybe_trait","","",130,{"inputs":[{"name":"typaramboundbuilder"},{"name":"p"}],"output":{"name":"polytraitrefbuilder"}}],[11,"lifetime","","",130,{"inputs":[{"name":"typaramboundbuilder"},{"name":"l"}],"output":{"name":"result"}}],[11,"invoke","","",131,{"inputs":[{"name":"traittyparamboundbuilder"},{"name":"polytraitref"}],"output":{"name":"result"}}],[11,"with_callback","","",132,{"inputs":[{"name":"p"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",132,{"inputs":[{"name":"polytraitrefbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_lifetime","","",132,{"inputs":[{"name":"polytraitrefbuilder"},{"name":"l"}],"output":{"name":"self"}}],[11,"lifetime","","",132,{"inputs":[{"name":"polytraitrefbuilder"},{"name":"n"}],"output":{"name":"lifetimedefbuilder"}}],[11,"build","","",132,{"inputs":[{"name":"polytraitrefbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",132,{"inputs":[{"name":"polytraitrefbuilder"},{"name":"lifetimedef"}],"output":{"name":"self"}}],[0,"variant","aster","",null,null],[3,"VariantBuilder","aster::variant","",null,null],[11,"new","","",133,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"with_callback","","",133,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",133,{"inputs":[{"name":"variantbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"attr","","",133,{"inputs":[{"name":"variantbuilder"}],"output":{"name":"attrbuilder"}}],[11,"unit","","",133,{"inputs":[{"name":"variantbuilder"}],"output":{"name":"result"}}],[11,"tuple","","",133,{"inputs":[{"name":"variantbuilder"}],"output":{"name":"structfieldbuilder"}}],[11,"struct_","","",133,{"inputs":[{"name":"variantbuilder"}],"output":{"name":"variantdatastructbuilder"}}],[11,"build_variant_data","","",133,{"inputs":[{"name":"variantbuilder"},{"name":"variantdata"}],"output":{"name":"result"}}],[11,"build_variant_","","",133,{"inputs":[{"name":"variantbuilder"},{"name":"variant_"}],"output":{"name":"result"}}],[11,"build","","",133,{"inputs":[{"name":"variantbuilder"},{"name":"variant"}],"output":{"name":"result"}}],[11,"invoke","","",133,{"inputs":[{"name":"variantbuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"invoke","","",133,{"inputs":[{"name":"variantbuilder"},{"name":"variantdata"}],"output":{"name":"result"}}],[0,"variant_data","aster","",null,null],[3,"VariantDataBuilder","aster::variant_data","",null,null],[3,"VariantDataTupleBuilder","","",null,null],[3,"VariantDataStructBuilder","","",null,null],[11,"new","","",134,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",134,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",134,{"inputs":[{"name":"variantdatabuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"tuple","","",134,{"inputs":[{"name":"variantdatabuilder"}],"output":{"name":"structfieldbuilder"}}],[11,"struct_","","",134,{"inputs":[{"name":"variantdatabuilder"}],"output":{"name":"variantdatastructbuilder"}}],[11,"unit","","",134,{"inputs":[{"name":"variantdatabuilder"}],"output":{"name":"result"}}],[11,"with_fields","","",135,{"inputs":[{"name":"variantdatatuplebuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_field","","",135,{"inputs":[{"name":"variantdatatuplebuilder"},{"name":"structfield"}],"output":{"name":"self"}}],[11,"field","","",135,{"inputs":[{"name":"variantdatatuplebuilder"}],"output":{"name":"structfieldbuilder"}}],[11,"with_ty","","",135,{"inputs":[{"name":"variantdatatuplebuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"ty","","",135,{"inputs":[{"name":"variantdatatuplebuilder"}],"output":{"name":"tybuilder"}}],[11,"build","","",135,{"inputs":[{"name":"variantdatatuplebuilder"}],"output":{"name":"result"}}],[11,"invoke","","",135,{"inputs":[{"name":"variantdatatuplebuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"invoke","","",135,{"inputs":[{"name":"variantdatatuplebuilder"},{"name":"structfield"}],"output":{"name":"self"}}],[11,"with_fields","","",136,{"inputs":[{"name":"variantdatastructbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_field","","",136,{"inputs":[{"name":"variantdatastructbuilder"},{"name":"structfield"}],"output":{"name":"self"}}],[11,"field","","",136,{"inputs":[{"name":"variantdatastructbuilder"},{"name":"t"}],"output":{"name":"structfieldbuilder"}}],[11,"build","","",136,{"inputs":[{"name":"variantdatastructbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",136,{"inputs":[{"name":"variantdatastructbuilder"},{"name":"structfield"}],"output":{"name":"self"}}],[0,"where_predicate","aster","",null,null],[3,"WherePredicateBuilder","aster::where_predicate","",null,null],[3,"WhereBoundPredicateBuilder","","",null,null],[3,"WhereBoundPredicateTyBuilder","","",null,null],[3,"WhereBoundPredicateTyBoundsBuilder","","",null,null],[3,"WhereRegionPredicateBuilder","","",null,null],[3,"WhereEqPredicateBuilder","","",null,null],[11,"new","","",137,{"inputs":[],"output":{"name":"self"}}],[11,"with_callback","","",137,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",137,{"inputs":[{"name":"wherepredicatebuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"bound","","",137,{"inputs":[{"name":"wherepredicatebuilder"}],"output":{"name":"tybuilder"}}],[11,"lifetime","","",137,{"inputs":[{"name":"wherepredicatebuilder"},{"name":"l"}],"output":{"name":"whereregionpredicatebuilder"}}],[11,"eq","","",137,{"inputs":[{"name":"wherepredicatebuilder"},{"name":"p"}],"output":{"name":"whereeqpredicatebuilder"}}],[11,"invoke","","",137,{"inputs":[{"name":"wherepredicatebuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",138,{"inputs":[{"name":"whereboundpredicatebuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"with_for_lifetime","","",139,{"inputs":[{"name":"whereboundpredicatetybuilder"},{"name":"l"}],"output":{"name":"self"}}],[11,"for_lifetime","","",139,{"inputs":[{"name":"whereboundpredicatetybuilder"},{"name":"n"}],"output":{"name":"lifetimedefbuilder"}}],[11,"with_bound","","",139,{"inputs":[{"name":"whereboundpredicatetybuilder"},{"name":"typarambound"}],"output":{"name":"whereboundpredicatetyboundsbuilder"}}],[11,"bound","","",139,{"inputs":[{"name":"whereboundpredicatetybuilder"}],"output":{"name":"typaramboundbuilder"}}],[11,"trait_","","",139,{"inputs":[{"name":"whereboundpredicatetybuilder"},{"name":"p"}],"output":{"name":"polytraitrefbuilder"}}],[11,"lifetime","","",139,{"inputs":[{"name":"whereboundpredicatetybuilder"},{"name":"l"}],"output":{"name":"whereboundpredicatetyboundsbuilder"}}],[11,"invoke","","",139,{"inputs":[{"name":"whereboundpredicatetybuilder"},{"name":"lifetimedef"}],"output":{"name":"self"}}],[11,"invoke","","",139,{"inputs":[{"name":"whereboundpredicatetybuilder"},{"name":"typarambound"}],"output":{"name":"result"}}],[11,"with_for_lifetime","","",140,{"inputs":[{"name":"whereboundpredicatetyboundsbuilder"},{"name":"l"}],"output":{"name":"self"}}],[11,"for_lifetime","","",140,{"inputs":[{"name":"whereboundpredicatetyboundsbuilder"},{"name":"n"}],"output":{"name":"lifetimedefbuilder"}}],[11,"with_bound","","",140,{"inputs":[{"name":"whereboundpredicatetyboundsbuilder"},{"name":"typarambound"}],"output":{"name":"self"}}],[11,"bound","","",140,{"inputs":[{"name":"whereboundpredicatetyboundsbuilder"}],"output":{"name":"typaramboundbuilder"}}],[11,"trait_","","",140,{"inputs":[{"name":"whereboundpredicatetyboundsbuilder"},{"name":"p"}],"output":{"name":"polytraitrefbuilder"}}],[11,"lifetime","","",140,{"inputs":[{"name":"whereboundpredicatetyboundsbuilder"},{"name":"l"}],"output":{"name":"self"}}],[11,"build","","",140,{"inputs":[{"name":"whereboundpredicatetyboundsbuilder"}],"output":{"name":"result"}}],[11,"invoke","","",140,{"inputs":[{"name":"whereboundpredicatetyboundsbuilder"},{"name":"lifetimedef"}],"output":{"name":"self"}}],[11,"invoke","","",140,{"inputs":[{"name":"whereboundpredicatetyboundsbuilder"},{"name":"typarambound"}],"output":{"name":"self"}}],[11,"bound","","",141,{"inputs":[{"name":"whereregionpredicatebuilder"},{"name":"l"}],"output":{"name":"self"}}],[11,"build","","",141,{"inputs":[{"name":"whereregionpredicatebuilder"}],"output":{"name":"result"}}],[11,"ty","","",142,{"inputs":[{"name":"whereeqpredicatebuilder"}],"output":{"name":"tybuilder"}}],[11,"build_ty","","",142,{"inputs":[{"name":"whereeqpredicatebuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"invoke","","",142,{"inputs":[{"name":"whereeqpredicatebuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"clone","aster","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"astbuilder"}}],[11,"new","","",143,{"inputs":[],"output":{"name":"astbuilder"}}],[11,"span","","",143,{"inputs":[{"name":"astbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"interned_string","","",143,{"inputs":[{"name":"astbuilder"},{"name":"s"}],"output":{"name":"internedstring"}}],[11,"id","","",143,{"inputs":[{"name":"astbuilder"},{"name":"i"}],"output":{"name":"ident"}}],[11,"name","","",143,{"inputs":[{"name":"astbuilder"},{"name":"n"}],"output":{"name":"name"}}],[11,"lifetime","","",143,{"inputs":[{"name":"astbuilder"},{"name":"l"}],"output":{"name":"lifetime"}}],[11,"arm","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"armbuilder"}}],[11,"attr","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"attrbuilder"}}],[11,"path","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"pathbuilder"}}],[11,"qpath","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"qpathbuilder"}}],[11,"ty","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"tybuilder"}}],[11,"lifetime_def","","",143,{"inputs":[{"name":"astbuilder"},{"name":"n"}],"output":{"name":"lifetimedefbuilder"}}],[11,"ty_param","","",143,{"inputs":[{"name":"astbuilder"},{"name":"i"}],"output":{"name":"typarambuilder"}}],[11,"ty_param_bound","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"typaramboundbuilder"}}],[11,"from_ty_param","","",143,{"inputs":[{"name":"astbuilder"},{"name":"typaram"}],"output":{"name":"typarambuilder"}}],[11,"generics","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"where_predicate","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"wherepredicatebuilder"}}],[11,"from_generics","","",143,{"inputs":[{"name":"astbuilder"},{"name":"generics"}],"output":{"name":"genericsbuilder"}}],[11,"lit","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"litbuilder"}}],[11,"expr","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"exprbuilder"}}],[11,"stmt","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"stmtbuilder"}}],[11,"block","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"blockbuilder"}}],[11,"pat","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"patbuilder"}}],[11,"fn_decl","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"fndeclbuilder"}}],[11,"method_sig","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"methodsigbuilder"}}],[11,"self_","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"selfbuilder"}}],[11,"arg","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"argbuilder"}}],[11,"variant_data","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"variantdatabuilder"}}],[11,"variant","","",143,{"inputs":[{"name":"astbuilder"},{"name":"t"}],"output":{"name":"variantbuilder"}}],[11,"struct_field","","",143,{"inputs":[{"name":"astbuilder"},{"name":"t"}],"output":{"name":"structfieldbuilder"}}],[11,"tuple_field","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"structfieldbuilder"}}],[11,"item","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"itembuilder"}}],[11,"trait_item","","",143,{"inputs":[{"name":"astbuilder"},{"name":"t"}],"output":{"name":"itemtraititembuilder"}}],[11,"impl_item","","",143,{"inputs":[{"name":"astbuilder"},{"name":"t"}],"output":{"name":"itemimplitembuilder"}}],[11,"const_","","",143,{"inputs":[{"name":"astbuilder"}],"output":{"name":"constbuilder"}}]],"paths":[[3,"ArmBuilder"],[3,"ArmPatBuilder"],[3,"ArmBodyBuilder"],[3,"AttrBuilder"],[3,"AttrListBuilder"],[3,"AttrNameValueBuilder"],[3,"BlockBuilder"],[3,"Const"],[3,"ConstBuilder"],[3,"ExprBuilder"],[3,"ExprUnaryBuilder"],[3,"ExprBinaryLhsBuilder"],[3,"ExprBinaryRhsBuilder"],[3,"ExprReturnBuilder"],[3,"ExprTupleBuilder"],[3,"ExprStructBuilder"],[3,"ExprStructPathBuilder"],[3,"ExprStructFieldBuilder"],[3,"ExprCallBuilder"],[3,"ExprCallArgsBuilder"],[3,"ExprMethodCallBuilder"],[3,"ExprMethodCallArgsBuilder"],[3,"ExprRefBuilder"],[3,"ExprPathBuilder"],[3,"ExprAssignBuilder"],[3,"ExprAssignLhsBuilder"],[3,"ExprAssignOpBuilder"],[3,"ExprAssignOpLhsBuilder"],[3,"ExprIndexBuilder"],[3,"ExprIndexLhsBuilder"],[3,"ExprRepeatBuilder"],[3,"ExprRepeatLhsBuilder"],[3,"ExprLoopBuilder"],[3,"ExprIfBuilder"],[3,"ExprIfThenBuilder"],[3,"ExprIfThenElseBuilder"],[3,"ExprElseIfBuilder"],[3,"ExprElseIfThenBuilder"],[3,"ExprMatchBuilder"],[3,"ExprMatchArmBuilder"],[3,"ExprParenBuilder"],[3,"ExprFieldBuilder"],[3,"ExprTupFieldBuilder"],[3,"ExprSliceBuilder"],[3,"ExprVecBuilder"],[3,"ExprTryBuilder"],[3,"FnDeclBuilder"],[3,"ArgBuilder"],[3,"ArgPatBuilder"],[3,"GenericsBuilder"],[8,"ToIdent"],[3,"Ident"],[3,"Name"],[3,"String"],[8,"Invoke"],[3,"Identity"],[3,"ItemBuilder"],[3,"ItemFnDeclBuilder"],[3,"ItemFnBuilder"],[3,"ItemUseBuilder"],[3,"ItemUsePathBuilder"],[3,"ItemUsePathListBuilder"],[3,"ItemStructBuilder"],[3,"ItemTupleStructBuilder"],[3,"ItemEnumBuilder"],[3,"ItemExternCrateBuilder"],[3,"ItemMacBuilder"],[3,"ItemTyBuilder"],[3,"ItemTraitBuilder"],[3,"ItemTraitItemBuilder"],[3,"ItemTraitMethodBuilder"],[3,"ItemTraitTypeBuilder"],[3,"ItemImplBuilder"],[3,"ItemImplItemBuilder"],[3,"ItemImplMethodBuilder"],[3,"ItemConstBuilder"],[8,"IntoLifetime"],[8,"IntoLifetimeDef"],[3,"Lifetime"],[3,"LifetimeDef"],[3,"LifetimeDefBuilder"],[3,"LitBuilder"],[3,"MacBuilder"],[3,"MethodSigBuilder"],[3,"SelfBuilder"],[8,"ToName"],[3,"PatBuilder"],[3,"PatRangeBuilder"],[3,"PatRangeExprBuilder"],[3,"PatEnumBuilder"],[3,"PatEnumPathBuilder"],[3,"PatStructBuilder"],[3,"PatStructPathBuilder"],[3,"PatStructFieldBuilder"],[3,"PatExprBuilder"],[3,"PatTupleBuilder"],[8,"IntoPath"],[3,"Path"],[3,"PathBuilder"],[3,"PathSegmentsBuilder"],[3,"PathSegmentBuilder"],[3,"TypeBindingBuilder"],[3,"QPathBuilder"],[3,"QPathTyBuilder"],[3,"QPathQSelfBuilder"],[3,"StmtBuilder"],[3,"StmtLetIdBuilder"],[3,"StmtExprBuilder"],[3,"StmtSemiBuilder"],[3,"StmtLetBuilder"],[3,"StmtLetTyBuilder"],[3,"StmtItemBuilder"],[8,"ToInternedString"],[3,"InternedString"],[3,"StructFieldBuilder"],[3,"TyBuilder"],[3,"TyPathBuilder"],[3,"TyQPathBuilder"],[3,"TySliceBuilder"],[3,"TyRefBuilder"],[3,"TyOptionBuilder"],[3,"TyResultOkBuilder"],[3,"TyResultErrBuilder"],[3,"TyPhantomDataBuilder"],[3,"TyBoxBuilder"],[3,"TyIteratorBuilder"],[3,"TyObjectSumBuilder"],[3,"TyObjectSumTyBuilder"],[3,"TyTupleBuilder"],[3,"TyParamBuilder"],[3,"TyParamBoundBuilder"],[3,"TraitTyParamBoundBuilder"],[3,"PolyTraitRefBuilder"],[3,"VariantBuilder"],[3,"VariantDataBuilder"],[3,"VariantDataTupleBuilder"],[3,"VariantDataStructBuilder"],[3,"WherePredicateBuilder"],[3,"WhereBoundPredicateBuilder"],[3,"WhereBoundPredicateTyBuilder"],[3,"WhereBoundPredicateTyBoundsBuilder"],[3,"WhereRegionPredicateBuilder"],[3,"WhereEqPredicateBuilder"],[3,"AstBuilder"]]};
searchIndex["quasi"] = {"doc":"","items":[[5,"parse_expr_panic","quasi","",null,{"inputs":[{"name":"parser"}],"output":{"name":"p"}}],[5,"parse_item_panic","","",null,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[5,"parse_pat_panic","","",null,{"inputs":[{"name":"parser"}],"output":{"name":"p"}}],[5,"parse_arm_panic","","",null,{"inputs":[{"name":"parser"}],"output":{"name":"arm"}}],[5,"parse_ty_panic","","",null,{"inputs":[{"name":"parser"}],"output":{"name":"p"}}],[5,"parse_stmt_panic","","",null,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[5,"parse_attribute_panic","","",null,{"inputs":[{"name":"parser"},{"name":"bool"}],"output":{"name":"attribute"}}],[8,"ToTokens","","",null,null],[10,"to_tokens","","",0,{"inputs":[{"name":"totokens"},{"name":"extctxt"}],"output":{"name":"vec"}}],[8,"ExtParseUtils","","",null,null],[10,"parse_item","","",1,{"inputs":[{"name":"extparseutils"},{"name":"string"}],"output":{"name":"p"}}],[10,"parse_expr","","",1,{"inputs":[{"name":"extparseutils"},{"name":"string"}],"output":{"name":"p"}}],[10,"parse_stmt","","",1,{"inputs":[{"name":"extparseutils"},{"name":"string"}],"output":{"name":"stmt"}}],[10,"parse_tts","","",1,{"inputs":[{"name":"extparseutils"},{"name":"string"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ast","",2,{"inputs":[{"name":"tokentree"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","collections::vec","",3,{"inputs":[{"name":"vec"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::codemap","",4,{"inputs":[{"name":"spanned"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","core::option","",5,{"inputs":[{"name":"option"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ast","",6,{"inputs":[{"name":"ident"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",7,{"inputs":[{"name":"path"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",8,{"inputs":[{"name":"ty"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ptr","",9,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",9,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",9,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",9,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",9,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ast","",10,{"inputs":[{"name":"generics"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",11,{"inputs":[{"name":"whereclause"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","quasi","",12,{"inputs":[{"name":"stmt"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ptr","",9,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",9,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ast","",13,{"inputs":[{"name":"arm"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ptr","",9,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","quasi","",14,{"inputs":[{"name":"attribute"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",15,{"inputs":[{"name":"lit"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"parse_item","syntax::ext::base","",16,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"p"}}],[11,"parse_stmt","","",16,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"stmt"}}],[11,"parse_expr","","",16,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"p"}}],[11,"parse_tts","","",16,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"vec"}}]],"paths":[[8,"ToTokens"],[8,"ExtParseUtils"],[4,"TokenTree"],[3,"Vec"],[3,"Spanned"],[4,"Option"],[3,"Ident"],[3,"Path"],[3,"Ty"],[3,"P"],[3,"Generics"],[3,"WhereClause"],[6,"Stmt"],[3,"Arm"],[6,"Attribute"],[6,"Lit"],[3,"ExtCtxt"]]};
initSearch(searchIndex);
